{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport { Card, Button, Avatar } from 'antd';\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, Po, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$myInfo;\n\n    return (_state$user$myInfo = state.user.myInfo) === null || _state$user$myInfo === void 0 ? void 0 : _state$user$myInfo.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 36\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostCard.js"],"names":["Card","Button","Avatar","HeartOutlined","MessageOutlined","RetweetOutlined","Po","EllipsisOutlined","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","myInfo","Images","images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,EAA1D,EAA8DC,gBAA9D,QAAsF,mBAAtF;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,iCAAWA,KAAK,CAACC,IAAN,CAAWC,MAAtB,uDAAW,mBAAmBH,EAA9B;AAAA,GAAD,CAAtB;AAEA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAED,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD7B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL,QAAC,OAAD;AAEI,QAAA,OAAO,eACH,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKL,EAAE,IAAID,IAAI,CAACO,IAAL,CAAUN,EAAV,KAAiBA,EAAvB,gBACG;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADH,gBAMG;AAAA,mCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAPR;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA,+BAiBI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAjBJ,SACQ,MADR;AAAA;AAAA;AAAA;AAAA,cAJK,CAFb;AAAA,6BA2BI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASD,IAAI,CAACO,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAnB;AAA6D,QAAA,KAAK,EAAER,IAAI,CAACO,IAAL,CAAUC,QAA9E;AAAwF,QAAA,WAAW,EAAER,IAAI,CAACS;AAA1G;AAAA;AAAA;AAAA;AAAA;AA3BJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAtCD;;AAwCAV,QAAQ,CAACW,SAAT,GAAqB;AACjBV,EAAAA,IAAI,EAAEH,SAAS,CAACc,KAAV,CAAgB;AAClBV,IAAAA,EAAE,EAAEJ,SAAS,CAACe,MADI;AAElBL,IAAAA,IAAI,EAAEV,SAAS,CAACgB,MAFE;AAGlBJ,IAAAA,OAAO,EAAEZ,SAAS,CAACiB,MAHD;AAIlBC,IAAAA,SAAS,EAAElB,SAAS,CAACgB,MAJH;AAKlBG,IAAAA,QAAQ,EAAEnB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACgB,MAA5B,CALQ;AAMlBR,IAAAA,MAAM,EAAER,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACgB,MAA5B;AANU,GAAhB,EAOHK;AARc,CAArB;AAWA,eAAenB,QAAf","sourcesContent":["import { Card, Button, Avatar } from 'antd';\r\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, Po, EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const id = useSelector((state) => state.user.myInfo?.id);\r\n\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    <HeartOutlined key=\"heart\" />,\r\n                    <MessageOutlined key=\"comment\" />,\r\n                    <Popover\r\n                        key=\"more\"\r\n                        content={\r\n                            <Button.Group>\r\n                                {id && post.User.id === id ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Button>신고</Button>\r\n                                    </>\r\n                                )}\r\n                            </Button.Group>\r\n                        }\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n            >\r\n                <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content} />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comment /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}