{"ast":null,"code":"import { all, fork } from '@redux-saga/core/effects';\nimport { delay, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user'; // const l = login({ type: 'LOG_IN_REQUEST', data: { id: 'cksdnr333@gmail.com' } });\n// function loginAPI(data) {\n//   return axios.post('api/login', data);\n// }\n\nfunction* login(action) {\n  // const result = yield call(loginAPI, action.data);\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function logoutAPI() {\n//   return axios.post('api/logout');\n// }\n\n\nfunction* logout() {\n  // const result = yield call(logoutAPI);\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('api/signup', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = signupAPI(action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  // while (true) {\n  //     yield take('LOG_IN_REQUEST', login);\n  // }\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  // while (true) {\n  //     yield take('LOG_OUT_REQUEST', logout);\n  // }\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","login","action","type","data","err","error","response","logout","signupAPI","post","signup","result","follow","unfollow","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","userSaga"],"mappings":"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","sourcesContent":["import { all, fork } from '@redux-saga/core/effects';\r\nimport { delay, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\r\n// const l = login({ type: 'LOG_IN_REQUEST', data: { id: 'cksdnr333@gmail.com' } });\r\n\r\n// function loginAPI(data) {\r\n//   return axios.post('api/login', data);\r\n// }\r\n\r\nfunction* login(action) {\r\n  // const result = yield call(loginAPI, action.data);\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function logoutAPI() {\r\n//   return axios.post('api/logout');\r\n// }\r\n\r\nfunction* logout() {\r\n  // const result = yield call(logoutAPI);\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('api/signup', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    const result = signupAPI(action.data);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unfollow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  // while (true) {\r\n  //     yield take('LOG_OUT_REQUEST', logout);\r\n  // }\r\n\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}