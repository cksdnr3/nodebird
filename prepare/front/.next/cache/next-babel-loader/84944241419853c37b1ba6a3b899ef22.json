{"ast":null,"code":"import { all, call, fork } from '@redux-saga/core/effects';\nimport { delay, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\n\nfunction loginAPI(data) {\n  return axios.post('user/login', data);\n}\n\nfunction* login(action) {\n  console.log('saga enter');\n\n  try {\n    const response = yield call(loginAPI, action.data);\n    console.log(`data: ${JSON.stringify(response.data)}`);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function logoutAPI() {\n//   return axios.post('api/logout');\n// }\n\n\nfunction* logout() {\n  // const result = yield call(logoutAPI);\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  // while (true) {\n  //     yield take('LOG_IN_REQUEST', login);\n  // }\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  // while (true) {\n  //     yield take('LOG_OUT_REQUEST', logout);\n  // }\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["all","call","fork","delay","put","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","login","action","console","log","response","JSON","stringify","type","err","error","logout","signupAPI","signup","follow","unfollow","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork } from '@redux-saga/core/effects';\r\nimport { delay, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST,\r\n  LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post('user/login', data);\r\n}\r\n\r\nfunction* login(action) {\r\n  console.log('saga enter');\r\n  try {\r\n    const response = yield call(loginAPI, action.data);\r\n    console.log(`data: ${JSON.stringify(response.data)}`);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function logoutAPI() {\r\n//   return axios.post('api/logout');\r\n// }\r\n\r\nfunction* logout() {\r\n  // const result = yield call(logoutAPI);\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unfollow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  // while (true) {\r\n  //     yield take('LOG_OUT_REQUEST', logout);\r\n  // }\r\n\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}