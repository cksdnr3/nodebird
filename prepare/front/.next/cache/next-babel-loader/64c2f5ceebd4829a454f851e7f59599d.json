{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useCallback, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n  }, []);\n  var clickImgUploadBtn = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"enter post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickImgUploadBtn,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"Twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (path) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: path,\n            style: {\n              width: 200\n            },\n            alt: path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, _this)]\n        }, path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"/S+eDUBpeHka+CiV9B04NQATrLE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostForm.js"],"names":["useCallback","useRef","useState","useDispatch","useSelector","Form","Input","Button","useInput","addPost","PostForm","state","post","imagePaths","mainPosts","dispatch","imageInput","text","setText","onChangeText","e","target","value","onSubmit","clickImgUploadBtn","current","click","margin","map","path","display","width"],"mappings":"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","sourcesContent":["import { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths } = useSelector((state) => state.post);\r\n    const { mainPosts } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n\r\n    const [text, setText] = useState('');\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost);\r\n    }, []);\r\n\r\n    const clickImgUploadBtn = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"enter post\" />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput} />\r\n                <Button onClick={clickImgUploadBtn}>Upload Image</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\r\n                    Twit\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((path) => (\r\n                    <div key={path} style={{ display: 'inline-block' }}>\r\n                        <img src={path} style={{ width: 200 }} alt={path} />\r\n                        <div>\r\n                            <Button>Delete</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}