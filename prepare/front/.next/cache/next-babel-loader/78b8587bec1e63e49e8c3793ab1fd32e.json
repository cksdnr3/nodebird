{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { Avatar, Card } from 'antd';\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../actions/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../actions/user';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/ConfigureStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  const {\n    myInfo,\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userInfo.nickname, ' ', \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.title\",\n          content: `${userInfo.nickname} 님의 게시글`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.description\",\n          content: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.image\",\n          content: \"https://nodebird.com/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.url\",\n          content: `https://nodebird.com/user/${id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), userInfo && userInfo.id !== (myInfo === null || myInfo === void 0 ? void 0 : myInfo.id) ? /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginBottom: 20\n        },\n        actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), userInfo.Posts]\n        }, \"twit\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), userInfo.Followings]\n        }, \"following\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), userInfo.Followers]\n        }, \"follower\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: userInfo.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this),\n          title: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : null, mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","END","Avatar","Card","axios","Head","useRouter","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","AppLayout","PostCard","wrapper","User","myInfo","userInfo","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","router","id","query","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","type","data","addEventListener","removeEventListener","nickname","marginBottom","Posts","Followings","Followers","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { Avatar, Card } from 'antd';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../actions/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../actions/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/ConfigureStore';\r\n\r\nconst User = () => {\r\n  const { myInfo, userInfo } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY\r\n        + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            data: id,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        {userInfo && (\r\n        <Head>\r\n          <title>\r\n            {userInfo.nickname}\r\n            {' '}\r\n            님의 게시글\r\n          </title>\r\n          <meta name=\"description\" content={userInfo.nickname} />\r\n          <meta property=\"og.title\" content={`${userInfo.nickname} 님의 게시글`} />\r\n          <meta property=\"og.description\" content={userInfo.nickname} />\r\n          <meta property=\"og.image\" content=\"https://nodebird.com/favicon.ico\" />\r\n          <meta property=\"og.url\" content={`https://nodebird.com/user/${id}`} />\r\n        </Head>\r\n        )}\r\n        {userInfo && (userInfo.id !== myInfo?.id)\r\n          ? (\r\n            <Card\r\n              style={{ marginBottom: 20 }}\r\n              actions={[\r\n                <div key=\"twit\">\r\n                  짹짹\r\n                  <br />\r\n                  {userInfo.Posts}\r\n                </div>,\r\n                <div key=\"following\">\r\n                  팔로잉\r\n                  <br />\r\n                  {userInfo.Followings}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                  팔로워\r\n                  <br />\r\n                  {userInfo.Followers}\r\n                </div>,\r\n              ]}\r\n            >\r\n              <Card.Meta\r\n                avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                title={userInfo.nickname}\r\n              />\r\n            </Card>\r\n          )\r\n          : null}\r\n        {mainPosts.map((c) => (\r\n          <PostCard key={c.id} post={c} />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}