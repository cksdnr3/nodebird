{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport { useCallback, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$myInfo;\n\n    return (_state$user$myInfo = state.user.myInfo) === null || _state$user$myInfo === void 0 ? void 0 : _state$user$myInfo.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 106\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 41\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, _this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              content: item.content,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 73\n              }, _this),\n              author: item.User.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, _this);\n        },\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        dataSource: post.Comments,\n        itemLayout: \"horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"TDWGRGH9sEmk3O3m4fnWhihQZFs=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostCard.js"],"names":["Card","Button","Avatar","Popover","List","Comment","HeartOutlined","MessageOutlined","RetweetOutlined","EllipsisOutlined","HeartTwoTone","useSelector","PropTypes","PostImages","useCallback","useState","CommentForm","PostCard","post","id","state","user","myInfo","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","item","Comments","length","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\nimport { useCallback, useState } from 'react';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const id = useSelector((state) => state.user.myInfo?.id);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, []);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ marginBottom: 10 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} /> : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover\r\n                        key=\"more\"\r\n                        content={\r\n                            <Button.Group>\r\n                                {id && post.User.id === id ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Button>신고</Button>\r\n                                    </>\r\n                                )}\r\n                            </Button.Group>\r\n                        }\r\n                    >\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n            >\r\n                <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content} />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment content={item.content} avatar={<Avatar>{item.User.nickname[0]}</Avatar>} author={item.User.nickname} />\r\n                            </li>\r\n                        )}\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        dataSource={post.Comments}\r\n                        itemLayout=\"horizontal\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}