{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { addPostRequestAction } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.post);\n  const {\n    myInfo\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPostRequestAction({\n      text,\n      myInfo\n    }));\n  }, [text]);\n  const clickImgUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"enter post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickImgUploadBtn,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        loading: addPostLoading,\n        htmlType: \"submit\",\n        children: \"Twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(path => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: path,\n          style: {\n            width: 200\n          },\n          alt: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useRef","useDispatch","useSelector","Form","Input","Button","addPostRequestAction","useInput","PostForm","imagePaths","addPostDone","addPostLoading","state","post","myInfo","user","dispatch","imageInput","text","onChangeText","setText","onSubmit","clickImgUploadBtn","current","click","margin","float","map","path","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAA8CT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAA9B;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,UAAU,GAAGjB,MAAM,EAAzB;AAEA,QAAM,CAACkB,IAAD,EAAOC,YAAP,EAAqBC,OAArB,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAJ,EAAiB;AACfU,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACV,WAAD,CAJM,CAAT;AAMA,QAAMW,QAAQ,GAAGvB,WAAW,CAAC,MAAM;AACjCkB,IAAAA,QAAQ,CACNV,oBAAoB,CAAC;AACnBY,MAAAA,IADmB;AAEnBJ,MAAAA;AAFmB,KAAD,CADd,CAAR;AAMD,GAP2B,EAOzB,CAACI,IAAD,CAPyB,CAA5B;AASA,QAAMI,iBAAiB,GAAGxB,WAAW,CAAC,MAAM;AAC1CmB,IAAAA,UAAU,CAACM,OAAX,CAAmBC,KAAnB;AACD,GAFoC,EAElC,CAACP,UAAU,CAACM,OAAZ,CAFkC,CAArC;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAEJ,QAAhF;AAAA,4BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAEH,IAAvB;AAA6B,MAAA,QAAQ,EAAEC,YAAvC;AAAqD,MAAA,SAAS,EAAE,GAAhE;AAAqE,MAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEK,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAA9B;AAAkD,QAAA,OAAO,EAAEf,cAA3D;AAA2E,QAAA,QAAQ,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA,gBACGF,UAAU,CAACkB,GAAX,CAAgBC,IAAD,iBACd;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAvB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAED,IAAV;AAAgB,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAvB;AAAuC,UAAA,GAAG,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjDD;;AAmDA,eAAepB,QAAf","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { addPostRequestAction } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone, addPostLoading } = useSelector((state) => state.post);\r\n  const { myInfo } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const imageInput = useRef();\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(\r\n      addPostRequestAction({\r\n        text,\r\n        myInfo,\r\n      }),\r\n    );\r\n  }, [text]);\r\n\r\n  const clickImgUploadBtn = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"enter post\" />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={clickImgUploadBtn}>Upload Image</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} loading={addPostLoading} htmlType=\"submit\">\r\n          Twit\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((path) => (\r\n          <div key={path} style={{ display: 'inline-block' }}>\r\n            <img src={path} style={{ width: 200 }} alt={path} />\r\n            <div>\r\n              <Button>Delete</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}