{"ast":null,"code":"import produce from 'immer';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, DELETE_POST_OF_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\nexport const initialState = {\n  loginLoading: false,\n  loginDone: false,\n  lgoinError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  signupLoading: false,\n  signupDone: false,\n  signupError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  myInfo: null\n};\nexport const loginRequestAction = data => ({\n  type: LOGIN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOGOUT_REQUEST\n});\nexport const followRequestAction = () => ({\n  type: FOLLOW_REQUEST\n});\nexport const unfollowRequestAction = () => ({\n  type: UNFOLLOW_REQUEST\n});\nexport const signupRequestAction = data => ({\n  type: SIGNUP_REQUEST,\n  data\n}); // const dummyGenerator = (data) => ({\n//   ...data,\n//   nickname: 'cksdnr3',\n//   id: v4(),\n//   Posts: [],\n//   Followings: [],\n//   Followers: [],\n// });\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      draft.loginLoading = true;\n      break;\n\n    case LOGIN_SUCCESS:\n      console.log('success~~~');\n      draft.loginLoading = false;\n      draft.loginDone = true;\n      draft.myInfo = action.data;\n      break;\n\n    case LOGIN_FAILURE:\n      draft.loginLoading = false;\n      draft.loginError = action.error;\n      console.log(action.error);\n      break;\n\n    case LOGOUT_REQUEST:\n      draft.logoutLoading = true;\n      break;\n\n    case LOGOUT_SUCCESS:\n      draft.logoutLoading = false;\n      draft.loginDone = false;\n      draft.myInfo = null;\n      break;\n\n    case LOGOUT_FAILURE:\n      draft.logoutLoading = false;\n      draft.logoutError = action.error;\n      console.log(action.error);\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = false;\n      draft.myInfo.nickname = action.data;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      console.log(action.error);\n      break;\n\n    case SIGNUP_REQUEST:\n      draft.signupLoading = true;\n      break;\n\n    case SIGNUP_SUCCESS:\n      draft.signupLoading = false;\n      draft.signupDone = true;\n      break;\n\n    case SIGNUP_FAILURE:\n      draft.signupLoading = false;\n      draft.signupError = action.error;\n      console.log(action.error);\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.myInfo.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case DELETE_POST_OF_ME:\n      draft.myInfo.Posts = draft.myInfo.Posts.filter(p => p.id !== action.data);\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.myInfo.Followings.push({\n        id: action.data\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      console.log(action.error);\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.myInfo.Followings = draft.myInfo.Followings.filter(f => f.id !== action.data);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      console.log(action.error);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer; // redux-thunk\n// export const loginAction = (data) => {\n//     return (dispatch, getState) => {\n//         dispatch(loginRequestAction());\n//         axios\n//             .post('api/login')\n//             .then((res) => {\n//                 dispatch(loginSuccessAction(res.data));\n//             })\n//             .catch((err) => {\n//                 dispatch(loginFailureAction(err));\n//             });\n//     };\n// };","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/user.js"],"names":["produce","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","DELETE_POST_OF_ME","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","initialState","loginLoading","loginDone","lgoinError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","myInfo","loginRequestAction","data","type","logoutRequestAction","followRequestAction","unfollowRequestAction","signupRequestAction","reducer","state","action","draft","console","log","loginError","error","nickname","Posts","unshift","id","filter","p","Followings","push","f"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\nimport {\r\n  ADD_POST_TO_ME,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  DELETE_POST_OF_ME,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../actions/user';\r\n\r\nexport const initialState = {\r\n  loginLoading: false,\r\n  loginDone: false,\r\n  lgoinError: null,\r\n  logoutLoading: false,\r\n  logoutDone: false,\r\n  logoutError: null,\r\n  signupLoading: false,\r\n  signupDone: false,\r\n  signupError: null,\r\n  changeNicknameLoading: false,\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  followLoading: false,\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false,\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  myInfo: null,\r\n};\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOGIN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n  type: LOGOUT_REQUEST,\r\n});\r\n\r\nexport const followRequestAction = () => ({\r\n  type: FOLLOW_REQUEST,\r\n});\r\n\r\nexport const unfollowRequestAction = () => ({\r\n  type: UNFOLLOW_REQUEST,\r\n});\r\n\r\nexport const signupRequestAction = (data) => ({\r\n  type: SIGNUP_REQUEST,\r\n  data,\r\n});\r\n\r\n// const dummyGenerator = (data) => ({\r\n//   ...data,\r\n//   nickname: 'cksdnr3',\r\n//   id: v4(),\r\n//   Posts: [],\r\n//   Followings: [],\r\n//   Followers: [],\r\n// });\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      draft.loginLoading = true;\r\n      break;\r\n    case LOGIN_SUCCESS:\r\n      console.log('success~~~');\r\n      draft.loginLoading = false;\r\n      draft.loginDone = true;\r\n      draft.myInfo = action.data;\r\n      break;\r\n    case LOGIN_FAILURE:\r\n      draft.loginLoading = false;\r\n      draft.loginError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case LOGOUT_REQUEST:\r\n      draft.logoutLoading = true;\r\n      break;\r\n    case LOGOUT_SUCCESS:\r\n      draft.logoutLoading = false;\r\n      draft.loginDone = false;\r\n      draft.myInfo = null;\r\n      break;\r\n    case LOGOUT_FAILURE:\r\n      draft.logoutLoading = false;\r\n      draft.logoutError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      draft.changeNicknameLoading = true;\r\n      break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameDone = false;\r\n      draft.myInfo.nickname = action.data;\r\n      break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case SIGNUP_REQUEST:\r\n      draft.signupLoading = true;\r\n      break;\r\n    case SIGNUP_SUCCESS:\r\n      draft.signupLoading = false;\r\n      draft.signupDone = true;\r\n      break;\r\n    case SIGNUP_FAILURE:\r\n      draft.signupLoading = false;\r\n      draft.signupError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case ADD_POST_TO_ME:\r\n      draft.myInfo.Posts.unshift({ id: action.data });\r\n      break;\r\n    case DELETE_POST_OF_ME:\r\n      draft.myInfo.Posts = draft.myInfo.Posts.filter((p) => p.id !== action.data);\r\n      break;\r\n    case FOLLOW_REQUEST:\r\n      draft.followLoading = true;\r\n      break;\r\n    case FOLLOW_SUCCESS:\r\n      draft.followLoading = false;\r\n      draft.followDone = true;\r\n      draft.myInfo.Followings.push({ id: action.data });\r\n      break;\r\n    case FOLLOW_FAILURE:\r\n      draft.followLoading = false;\r\n      draft.followError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case UNFOLLOW_REQUEST:\r\n      draft.unfollowLoading = true;\r\n      break;\r\n    case UNFOLLOW_SUCCESS:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowDone = true;\r\n      draft.myInfo.Followings = draft.myInfo.Followings.filter((f) => f.id !== action.data);\r\n      break;\r\n    case UNFOLLOW_FAILURE:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    default: break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n\r\n// redux-thunk\r\n// export const loginAction = (data) => {\r\n//     return (dispatch, getState) => {\r\n//         dispatch(loginRequestAction());\r\n//         axios\r\n//             .post('api/login')\r\n//             .then((res) => {\r\n//                 dispatch(loginSuccessAction(res.data));\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch(loginFailureAction(err));\r\n//             });\r\n//     };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}