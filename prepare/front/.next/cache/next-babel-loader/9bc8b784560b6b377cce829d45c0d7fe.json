{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\n\nfunction addPostAPI() {\n  return axios.post('api/login');\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    localStorage.setItem('id', action.data.id);\n    localStorage.setItem('pwd', action.data.pwd);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  // while (true) {\n  //     yield take('ADD_POST_REQUEST', addPost);\n  // }\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/post.js"],"names":["axios","all","delay","fork","put","takeLatest","addPostAPI","post","addPost","action","localStorage","setItem","data","id","pwd","type","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,UAAT,GAAsB;AAClB,SAAON,KAAK,CAACO,IAAN,CAAW,WAAX,CAAP;AACH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BF,MAAM,CAACG,IAAP,CAAYC,EAAvC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,MAAM,CAACG,IAAP,CAAYE,GAAxC;AACA,UAAMV,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE,kBADA;AAENH,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GATD,CASE,OAAOK,GAAP,EAAY;AACV,UAAMb,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE,kBADA;AAENH,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUO,YAAV,GAAyB;AACrB;AACA;AACA;AAEA,QAAMd,UAAU,CAAC,kBAAD,EAAqBG,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAChC,QAAMnB,GAAG,CAAC,CAACE,IAAI,CAACgB,YAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nfunction addPostAPI() {\r\n    return axios.post('api/login');\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        localStorage.setItem('id', action.data.id);\r\n        localStorage.setItem('pwd', action.data.pwd);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    // while (true) {\r\n    //     yield take('ADD_POST_REQUEST', addPost);\r\n    // }\r\n\r\n    yield takeLatest('ADD_POST_REQUEST', addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}