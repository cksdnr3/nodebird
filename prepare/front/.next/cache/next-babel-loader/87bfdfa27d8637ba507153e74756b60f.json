{"ast":null,"code":"import { all, call, fork } from '@redux-saga/core/effects';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\n\nconst loginAPI = data => axios.post('/user/login', data);\n\nfunction* login(action) {\n  try {\n    const response = yield call(loginAPI, action.data);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst logoutAPI = () => axios.post('/user/logout');\n\nfunction* logout() {\n  const response = yield call(logoutAPI);\n\n  try {\n    yield put({\n      type: LOGOUT_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst signupAPI = data => axios.post('/user', data);\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst followAPI = data => axios.patch(`/user/${data}.follow`);\n\nfunction* follow(action) {\n  try {\n    const response = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst unfollowAPI = data => axios.delete(`/user/${data}/follow`);\n\nfunction* unfollow(action) {\n  try {\n    const response = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadMyInfoAPI = () => axios.get('/user');\n\nfunction* loadMyInfo() {\n  try {\n    const response = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst changeNicknameAPI = data => axios.patch('/user/nickname', data);\n\nfunction* changeNickname(action) {\n  try {\n    const response = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  // while (true) {\n  //     yield take('LOG_IN_REQUEST', login);\n  // }\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","login","action","response","type","err","error","logoutAPI","logout","signupAPI","signup","followAPI","patch","follow","unfollowAPI","delete","unfollow","loadMyInfoAPI","get","loadMyInfo","changeNicknameAPI","changeNickname","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","watchLoadMyInfo","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork } from '@redux-saga/core/effects';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../actions/user';\r\n\r\nconst loginAPI = (data) => axios.post('/user/login', data);\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const response = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst logoutAPI = () => axios.post('/user/logout');\r\n\r\nfunction* logout() {\r\n  const response = yield call(logoutAPI);\r\n  try {\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst signupAPI = (data) => axios.post('/user', data);\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst followAPI = (data) => axios.patch(`/user/${data}.follow`);\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const response = yield call(followAPI, action.data);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst unfollowAPI = (data) => axios.delete(`/user/${data}/follow`);\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const response = yield call(unfollowAPI, action.data);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadMyInfoAPI = () => axios.get('/user');\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const response = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst changeNicknameAPI = (data) => axios.patch('/user/nickname', data);\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const response = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo), fork(watchChangeNickname)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}