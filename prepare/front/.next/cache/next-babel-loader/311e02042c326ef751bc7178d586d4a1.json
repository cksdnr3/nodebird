{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addCommentRequestAction } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const {\n    myInfo\n  } = useSelector(state => state.user);\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addPostDone) {\n      setCommentText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch(addCommentRequestAction({\n      content: commentText,\n      postId: post.id,\n      userId: id\n    }));\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        style: {\n          marginBottom: 5\n        },\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'right'\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.shape({\n      nickname: PropTypes.string\n    }),\n    content: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","PropTypes","Button","Form","Input","useDispatch","useSelector","useInput","addCommentRequestAction","CommentForm","post","commentText","onChangeCommentText","setCommentText","myInfo","state","user","addPostDone","dispatch","onSubmit","console","log","id","content","postId","userId","marginBottom","float","propTypes","shape","string","User","nickname","Comments","arrayOf","object","Images","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDN,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAAnC;AACA,QAAMQ,QAAQ,GAAGb,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,WAAJ,EAAiB;AACfJ,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACI,WAAD,CAJM,CAAT;AAMA,QAAME,QAAQ,GAAGpB,WAAW,CAAC,MAAM;AACjCqB,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACY,EAAjB,EAAqBX,WAArB;AACAO,IAAAA,QAAQ,CACNV,uBAAuB,CAAC;AACtBe,MAAAA,OAAO,EAAEZ,WADa;AAEtBa,MAAAA,MAAM,EAAEd,IAAI,CAACY,EAFS;AAGtBG,MAAAA,MAAM,EAAEH;AAHc,KAAD,CADjB,CAAR;AAOD,GAT2B,EASzB,CAACX,WAAD,CATyB,CAA5B;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,QAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAE;AAAEO,UAAAA,YAAY,EAAE;AAAhB,SAAvB;AAA4C,QAAA,WAAW,EAAC,0DAAxD;AAAsE,QAAA,KAAK,EAAEf,WAA7E;AAA0F,QAAA,QAAQ,EAAEC,mBAApG;AAAyH,QAAA,IAAI,EAAE;AAA/H;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SAAf;AAAmC,QAAA,IAAI,EAAC,SAAxC;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjCD;;AAmCAlB,WAAW,CAACmB,SAAZ,GAAwB;AACtBlB,EAAAA,IAAI,EAAET,SAAS,CAAC4B,KAAV,CAAgB;AACpBP,IAAAA,EAAE,EAAErB,SAAS,CAAC6B,MADM;AAEpBC,IAAAA,IAAI,EAAE9B,SAAS,CAAC4B,KAAV,CAAgB;AACpBG,MAAAA,QAAQ,EAAE/B,SAAS,CAAC6B;AADA,KAAhB,CAFc;AAKpBP,IAAAA,OAAO,EAAEtB,SAAS,CAAC6B,MALC;AAMpBG,IAAAA,QAAQ,EAAEhC,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACkC,MAA5B,CANU;AAOpBC,IAAAA,MAAM,EAAEnC,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACkC,MAA5B;AAPY,GAAhB,EAQHE;AATmB,CAAxB;AAYA,eAAe5B,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addCommentRequestAction } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n  const { myInfo } = useSelector((state) => state.user);\r\n  const { addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch(\r\n      addCommentRequestAction({\r\n        content: commentText,\r\n        postId: post.id,\r\n        userId: id,\r\n      }),\r\n    );\r\n  }, [commentText]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmit}>\r\n      <Form.Item>\r\n        <Input.TextArea style={{ marginBottom: 5 }} placeholder=\"댓글을 입력해주세요.\" value={commentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button style={{ float: 'right' }} type=\"primary\" htmlType=\"submit\">\r\n          comment\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    User: PropTypes.shape({\r\n      nickname: PropTypes.string,\r\n    }),\r\n    content: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}