{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\FollowBtn.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar FollowBtn = function FollowBtn(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      myInfo = _useSelector.myInfo,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var following = myInfo === null || myInfo === void 0 ? void 0 : myInfo.Followings.find(function (f) {\n    return f.id === post.User.id;\n  });\n  var dispatch = useDispatch();\n  var followHandler = useCallback(function () {\n    if (following) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [following]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      loading: followLoading || unfollowLoading,\n      onClick: followHandler,\n      children: following ? 'Unfollow' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(FollowBtn, \"NgxVj/EU7UIHvvAEk9HQpfbGNMY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FollowBtn;\nFollowBtn.propTypes = {\n  post: PropTypes.shape().isRequired\n};\nexport default FollowBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowBtn\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/FollowBtn.js"],"names":["React","useCallback","PropTypes","Button","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowBtn","post","state","user","myInfo","followLoading","unfollowLoading","following","Followings","find","f","id","User","dispatch","followHandler","type","data","propTypes","shape","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,iBAAjD;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9B,qBAAmDJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA9D;AAAA,MAAQC,MAAR,gBAAQA,MAAR;AAAA,MAAgBC,aAAhB,gBAAgBA,aAAhB;AAAA,MAA+BC,eAA/B,gBAA+BA,eAA/B;;AACA,MAAMC,SAAS,GAAGH,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEI,UAAR,CAAmBC,IAAnB,CAAwB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASV,IAAI,CAACW,IAAL,CAAUD,EAA1B;AAAA,GAAxB,CAAlB;AAEA,MAAME,QAAQ,GAAGjB,WAAW,EAA5B;AACA,MAAMkB,aAAa,GAAGrB,WAAW,CAAC,YAAM;AACtC,QAAIc,SAAJ,EAAe;AACbM,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEhB,gBADC;AAEPiB,QAAAA,IAAI,EAAEf,IAAI,CAACW,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID,KALD,MAKO;AACLE,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEjB,cADC;AAEPkB,QAAAA,IAAI,EAAEf,IAAI,CAACW,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID;AACF,GAZgC,EAY9B,CAACJ,SAAD,CAZ8B,CAAjC;AAaA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,aAAa,IAAIC,eAAlC;AAAmD,MAAA,OAAO,EAAEQ,aAA5D;AAAA,gBACGP,SAAS,GAAG,UAAH,GAAgB;AAD5B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAzBD;;GAAMP,S;UAC+CH,W,EAGlCD,W;;;KAJbI,S;AA2BNA,SAAS,CAACiB,SAAV,GAAsB;AACpBhB,EAAAA,IAAI,EAAEP,SAAS,CAACwB,KAAV,GAAkBC;AADJ,CAAtB;AAIA,eAAenB,SAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../actions/user';\r\n\r\nconst FollowBtn = ({ post }) => {\r\n  const { myInfo, followLoading, unfollowLoading } = useSelector((state) => state.user);\r\n  const following = myInfo?.Followings.find((f) => f.id === post.User.id);\r\n\r\n  const dispatch = useDispatch();\r\n  const followHandler = useCallback(() => {\r\n    if (following) {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    }\r\n  }, [following]);\r\n  return (\r\n    <>\r\n      <Button loading={followLoading || unfollowLoading} onClick={followHandler}>\r\n        {following ? 'Unfollow' : 'Follow'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nFollowBtn.propTypes = {\r\n  post: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default FollowBtn;\r\n"]},"metadata":{},"sourceType":"module"}