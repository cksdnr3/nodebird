{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport FollowBtn from './FollowBtn';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { deletePostRequestAction } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$myInfo;\n\n    return (_state$user$myInfo = state.user.myInfo) === null || _state$user$myInfo === void 0 ? void 0 : _state$user$myInfo.id;\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    deletePostLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const clickDeleteBtn = useCallback(() => {\n    dispatch(deletePostRequestAction(post.id));\n  }, [post.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              loading: deletePostLoading,\n              onClick: clickDeleteBtn,\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)],\n      extra: id && id !== post.User.id && /*#__PURE__*/_jsxDEV(FollowBtn, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        renderItem: item => post.Comments.length ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            content: item.content,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this),\n            author: item.User.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n        header: `${post.Comments.length}개의 댓글`,\n        dataSource: post.Comments,\n        itemLayout: \"horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.shape({\n      nickname: PropTypes.string,\n      id: PropTypes.number\n    }),\n    content: PropTypes.string,\n    createdAt: PropTypes.string.isRequired,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","Card","Button","Avatar","Popover","List","Comment","HeartOutlined","MessageOutlined","RetweetOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","FollowBtn","CommentForm","PostCardContent","deletePostRequestAction","PostCard","post","id","state","user","myInfo","liked","setLiked","commentFormOpened","setCommentFormOpened","deletePostLoading","dispatch","onToggleLike","prev","onToggleComment","clickDeleteBtn","marginBottom","Images","onLike","onUnlike","User","nickname","content","item","Comments","length","propTypes","shape","number","string","createdAt","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\nimport FollowBtn from './FollowBtn';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { deletePostRequestAction } from '../reducers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.myInfo?.id);\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const { deletePostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const clickDeleteBtn = useCallback(() => {\r\n    dispatch(deletePostRequestAction(post.id));\r\n  }, [post.id]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 10 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined\r\n              key=\"heart\"\r\n              onClick={onUnlike}\r\n            />\r\n          ),\r\n          <MessageOutlined\r\n            key=\"comment\"\r\n            onClick={onToggleComment}\r\n          />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button loading={deletePostLoading} onClick={clickDeleteBtn} type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Button>신고</Button>\r\n                  </>\r\n                )}\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && id !== post.User.id && <FollowBtn post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            renderItem={(item) => (post.Comments.length\r\n              ? (\r\n                <li>\r\n                  <Comment\r\n                    content={item.content}\r\n                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                    author={item.User.nickname}\r\n                  />\r\n                </li>\r\n              )\r\n              : <></>)}\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            dataSource={post.Comments}\r\n            itemLayout=\"horizontal\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.shape({\r\n      nickname: PropTypes.string,\r\n      id: PropTypes.number,\r\n    }),\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string.isRequired,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}