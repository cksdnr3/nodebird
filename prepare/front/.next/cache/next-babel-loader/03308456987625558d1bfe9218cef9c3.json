{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\hashtag\\\\[tag].js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../actions/post';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/ConfigureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../actions/user';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie; // context.store.dispatch({\n    //   type: LOAD_MY_INFO_REQUEST,\n    // });\n  }\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.tag\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","END","axios","LOAD_HASHTAG_POSTS_REQUEST","PostCard","wrapper","LOAD_MY_INFO_REQUEST","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../actions/post';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/ConfigureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../actions/user';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst Hashtag = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset\r\n        + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n            data: tag,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n    // context.store.dispatch({\r\n    //   type: LOAD_MY_INFO_REQUEST,\r\n    // });\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}