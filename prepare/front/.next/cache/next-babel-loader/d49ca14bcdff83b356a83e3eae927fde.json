{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_POST_REQUEST } from '../actions/post';\nimport { LOAD_MY_INFO_REQUEST } from '../actions/user';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const {\n    myInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [myInfo && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","AppLayout","PostCard","PostForm","Home","myInfo","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","data","addEventListener","removeEventListener","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,oBAAT,QAAqC,iBAArC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAaP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAjE;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGAY,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD,GAPQ,EAON,EAPM,CAAT;AASAH,EAAAA,SAAS,CAAC,MAAM;AACd,aAASkB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,OAAP,GACCC,QAAQ,CAACC,eAAT,CAAyBC,YAD1B,GAECF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF7C,EAEkD;AAChD,YAAIX,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrC,gBAAMW,MAAM,GAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;AACAX,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEd,iBADC;AAEPyB,YAAAA,IAAI,EAAEH;AAFC,WAAD,CAAR;AAID;AACF;AACF;;AAEDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACL,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAnBM,CAAT;AAqBA,sBACE,QAAC,SAAD;AAAA,eACGH,MAAM,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADb,EAEGG,SAAS,CAACmB,GAAV,CAAehB,IAAD,iBACb,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACY,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3CD;;AA6CA,eAAenB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_POST_REQUEST } from '../actions/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../actions/user';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\n\r\nconst Home = () => {\r\n  const { myInfo } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY\r\n         + document.documentElement.clientHeight\r\n         > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1].id;\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data: lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {myInfo && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}