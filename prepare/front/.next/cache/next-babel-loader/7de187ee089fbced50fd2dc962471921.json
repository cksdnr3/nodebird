{"ast":null,"code":"import { all, call, fork } from '@redux-saga/core/effects';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, REMOVE_FOLLOWERS_FAILURE, REMOVE_FOLLOWERS_REQUEST, REMOVE_FOLLOWERS_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\n\nconst loginAPI = data => axios.post('/user/login', data);\n\nfunction* login(action) {\n  try {\n    const response = yield call(loginAPI, action.data);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst logoutAPI = () => axios.post('/user/logout');\n\nfunction* logout() {\n  const response = yield call(logoutAPI);\n\n  try {\n    yield put({\n      type: LOGOUT_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst signupAPI = data => axios.post('/user', data);\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst followAPI = data => axios.patch(`/user/${data}/follow`);\n\nfunction* follow(action) {\n  try {\n    console.log(action.data);\n    const response = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst unfollowAPI = data => axios.delete(`/user/${data}/follow`);\n\nfunction* unfollow(action) {\n  try {\n    const response = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadMyInfoAPI = () => axios.get('/user');\n\nfunction* loadMyInfo() {\n  try {\n    const response = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadUserAPI = data => axios.get(`/user/${data}`);\n\nfunction* loadUser(action) {\n  try {\n    const response = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst changeNicknameAPI = data => axios.patch('/user/nickname', data);\n\nfunction* changeNickname(action) {\n  try {\n    const response = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadFollowersAPI = () => axios.get(`/user/followers?limit=${data}`);\n\nfunction* loadFollowers() {\n  try {\n    const response = yield call(loadFollowersAPI);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadFollowingsAPI = () => axios.get(`/user/followings?limit=${data}`);\n\nfunction* loadFollowings() {\n  try {\n    const response = yield call(loadFollowingsAPI);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst removeFollowerAPI = data => axios.delete(`/user/follower/${data}`);\n\nfunction* removeFollower(action) {\n  try {\n    const response = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWERS_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  // while (true) {\n  //     yield take('LOG_IN_REQUEST', login);\n  // }\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWERS_REQUEST, removeFollower);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo), fork(watchChangeNickname), fork(watchLoadFollowings), fork(watchLoadFollowers), fork(watchRemoveFollower), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","REMOVE_FOLLOWERS_FAILURE","REMOVE_FOLLOWERS_REQUEST","REMOVE_FOLLOWERS_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","login","action","response","type","err","error","logoutAPI","logout","signupAPI","signup","followAPI","patch","follow","console","log","unfollowAPI","delete","unfollow","loadMyInfoAPI","get","loadMyInfo","loadUserAPI","loadUser","changeNicknameAPI","changeNickname","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","removeFollowerAPI","removeFollower","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","watchLoadMyInfo","watchChangeNickname","watchLoadFollowers","watchLoadFollowings","watchRemoveFollower","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork } from '@redux-saga/core/effects';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS, REMOVE_FOLLOWERS_FAILURE, REMOVE_FOLLOWERS_REQUEST, REMOVE_FOLLOWERS_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../actions/user';\r\n\r\nconst loginAPI = (data) => axios.post('/user/login', data);\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const response = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst logoutAPI = () => axios.post('/user/logout');\r\n\r\nfunction* logout() {\r\n  const response = yield call(logoutAPI);\r\n  try {\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst signupAPI = (data) => axios.post('/user', data);\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst followAPI = (data) => axios.patch(`/user/${data}/follow`);\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    console.log(action.data);\r\n    const response = yield call(followAPI, action.data);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst unfollowAPI = (data) => axios.delete(`/user/${data}/follow`);\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const response = yield call(unfollowAPI, action.data);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadMyInfoAPI = () => axios.get('/user');\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const response = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadUserAPI = (data) => axios.get(`/user/${data}`);\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const response = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst changeNicknameAPI = (data) => axios.patch('/user/nickname', data);\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const response = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadFollowersAPI = () => axios.get(`/user/followers?limit=${data}`);\r\n\r\nfunction* loadFollowers() {\r\n  try {\r\n    const response = yield call(loadFollowersAPI);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadFollowingsAPI = () => axios.get(`/user/followings?limit=${data}`);\r\n\r\nfunction* loadFollowings() {\r\n  try {\r\n    const response = yield call(loadFollowingsAPI);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n\r\n    });\r\n  }\r\n}\r\n\r\nconst removeFollowerAPI = (data) => axios.delete(`/user/follower/${data}`);\r\n\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const response = yield call(removeFollowerAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_FOLLOWERS_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWERS_REQUEST, removeFollower);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo),\r\n    fork(watchChangeNickname), fork(watchLoadFollowings), fork(watchLoadFollowers),\r\n    fork(watchRemoveFollower), fork(watchLoadUser)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}