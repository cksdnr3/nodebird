{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../actions/post';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar User = function User() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      myInfo = _useSelector.myInfo,\n      userInfo = _useSelector.userInfo;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userInfo.nickname, ' ', \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.title\",\n          content: \"\".concat(userInfo.nickname, \" \\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.description\",\n          content: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.image\",\n          content: \"https://nodebird.com/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og.url\",\n          content: \"https://nodebird.com/user/\".concat(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), userInfo && userInfo.id !== (myInfo === null || myInfo === void 0 ? void 0 : myInfo.id) ? /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginBottom: 20\n        },\n        actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, _this), userInfo.Posts]\n        }, \"twit\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, _this), userInfo.Followings]\n        }, \"following\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, _this), userInfo.Followers]\n        }, \"follower\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, _this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: userInfo.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, _this),\n          title: userInfo.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, _this) : null, mainPosts.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          post: c\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(User, \"lVZIDrva+NwNwErKUmgNNWRDtjk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useRouter];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_USER_POSTS_REQUEST","AppLayout","PostCard","User","state","user","myInfo","userInfo","post","mainPosts","hasMorePosts","loadPostsLoading","dispatch","router","id","query","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","type","data","addEventListener","removeEventListener","nickname","marginBottom","Posts","Followings","Followers","map","c"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { Avatar, Card } from 'antd';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../actions/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../actions/user';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/ConfigureStore';\r\n\r\nconst User = () => {\r\n  const { myInfo, userInfo } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY\r\n        + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            data: id,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        {userInfo && (\r\n        <Head>\r\n          <title>\r\n            {userInfo.nickname}\r\n            {' '}\r\n            님의 게시글\r\n          </title>\r\n          <meta name=\"description\" content={userInfo.nickname} />\r\n          <meta property=\"og.title\" content={`${userInfo.nickname} 님의 게시글`} />\r\n          <meta property=\"og.description\" content={userInfo.nickname} />\r\n          <meta property=\"og.image\" content=\"https://nodebird.com/favicon.ico\" />\r\n          <meta property=\"og.url\" content={`https://nodebird.com/user/${id}`} />\r\n        </Head>\r\n        )}\r\n        {userInfo && (userInfo.id !== myInfo?.id)\r\n          ? (\r\n            <Card\r\n              style={{ marginBottom: 20 }}\r\n              actions={[\r\n                <div key=\"twit\">\r\n                  짹짹\r\n                  <br />\r\n                  {userInfo.Posts}\r\n                </div>,\r\n                <div key=\"following\">\r\n                  팔로잉\r\n                  <br />\r\n                  {userInfo.Followings}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                  팔로워\r\n                  <br />\r\n                  {userInfo.Followers}\r\n                </div>,\r\n              ]}\r\n            >\r\n              <Card.Meta\r\n                avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                title={userInfo.nickname}\r\n              />\r\n            </Card>\r\n          )\r\n          : null}\r\n        {mainPosts.map((c) => (\r\n          <PostCard key={c.id} post={c} />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}