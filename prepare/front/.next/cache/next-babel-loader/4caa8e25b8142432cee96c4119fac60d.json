{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork } from '@redux-saga/core/effects';\nimport { delay, put, takeLatest } from 'redux-saga/effects';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_REQUEST } from '../actions/user'; // const l = login({ type: 'LOG_IN_REQUEST', data: { id: 'cksdnr333@gmail.com' } });\n// function loginAPI(data) {\n//   return axios.post('api/login', data);\n// }\n\nfunction login(action) {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOGIN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOGIN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n} // function logoutAPI() {\n//   return axios.post('api/logout');\n// }\n\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOGOUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOGOUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n} // function signupAPI(data) {\n//   return axios.post('api/signup', data);\n// }\n\n\nfunction signup(action) {\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          localStorage.setItem('id', action.data.id);\n          localStorage.setItem('pwd', action.data.pwd);\n          _context3.next = 7;\n          return put({\n            type: SIGNUP_SUCCESS\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: SIGNUP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.datas\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOGIN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOGOUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(SIGNUP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["login","logout","signup","follow","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","userSaga","all","fork","delay","put","takeLatest","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_REQUEST","action","type","data","error","response","localStorage","setItem","id","pwd","datas","unfollow"],"mappings":"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","sourcesContent":["import { all, fork } from '@redux-saga/core/effects';\r\nimport { delay, put, takeLatest } from 'redux-saga/effects';\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_REQUEST } from '../actions/user';\r\n\r\n// const l = login({ type: 'LOG_IN_REQUEST', data: { id: 'cksdnr333@gmail.com' } });\r\n\r\n// function loginAPI(data) {\r\n//   return axios.post('api/login', data);\r\n// }\r\n\r\nfunction* login(action) {\r\n  // const result = yield call(loginAPI, action.data);\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function logoutAPI() {\r\n//   return axios.post('api/logout');\r\n// }\r\n\r\nfunction* logout() {\r\n  // const result = yield call(logoutAPI);\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function signupAPI(data) {\r\n//   return axios.post('api/signup', data);\r\n// }\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    // const result = signupAPI(action.data);\r\n    yield delay(1000);\r\n    localStorage.setItem('id', action.data.id);\r\n    localStorage.setItem('pwd', action.data.pwd);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.datas,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  // while (true) {\r\n  //     yield take('LOG_OUT_REQUEST', logout);\r\n  // }\r\n\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}