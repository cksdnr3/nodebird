{"ast":null,"code":"import produce from 'immer';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, DELETE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, LIKE_FAILURE, LIKE_REQUEST, LIKE_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, UNLIKE_FAILURE, UNLIKE_REQUEST, UNLIKE_SUCCESS } from '../actions/post';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  deletePostLoading: false,\n  deletePostDone: false,\n  deletePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likeLoading: false,\n  likeDone: false,\n  likeError: null,\n  unlikeLoading: false,\n  unlikeDone: false,\n  unlikeError: null,\n  hasMorePosts: true\n};\nexport const addPostRequestAction = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const deletePostRequestAction = data => ({\n  type: DELETE_POST_REQUEST,\n  data\n});\nexport const addCommentRequestAction = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false; // immer 사용\n\n      draft.mainPosts.unshift(action.data); // immer 사용 X\n      // [dummyPost(action.data), ...state.mainPosts];\n\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      console.log(action.error);\n      break;\n\n    case DELETE_POST_REQUEST:\n      draft.deletePostLoading = true;\n      break;\n\n    case DELETE_POST_SUCCESS:\n      draft.deletePostLoading = false;\n      draft.deletePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(p => p.id !== action.data.PostId);\n      break;\n\n    case DELETE_POST_FAILURE:\n      draft.deletePostLoading = false;\n      draft.deletePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        draft.addCommentDone = true;\n        draft.addCommentLoading = false;\n        const post = draft.mainPosts.find(p => p.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n      }\n      break;\n\n    case ADD_COMMENT_FAILURE:\n      draft.loadPostsError = action.error;\n      draft.loadPostsLoading = false;\n      break;\n\n    case LOAD_POST_REQUEST:\n      draft.loadPostsLoading = true;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case LIKE_REQUEST:\n      draft.likeLoading = true;\n      break;\n\n    case LIKE_SUCCESS:\n      {\n        draft.likeLoading = false;\n        draft.likeDone = true;\n        const post = draft.mainPosts.find(p => p.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        break;\n      }\n\n    case LIKE_FAILURE:\n      draft.likeError = action.Error;\n      draft.likeLoading = false;\n      break;\n\n    case UNLIKE_REQUEST:\n      draft.unlikeLoading = true;\n      break;\n\n    case UNLIKE_SUCCESS:\n      {\n        draft.unlikeLoading = false;\n        draft.unlikeDone = true;\n        const post = draft.mainPosts.find(p => p.id === action.data.PostId);\n        post.Likers = post.Likers.filter(l => l.id !== action.data.UserId);\n        break;\n      }\n\n    case UNLIKE_FAILURE:\n      draft.unlikeError = action.Error;\n      draft.unlikeLoading = false;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer; // export const dummyPostsGenerator = (number) => Array(number).fill().map(() => ({\n//   id: v4(),\n//   User: {\n//     id: v4(),\n//     nickname: faker.name.findName(),\n//   },\n//   content: faker.lorem.paragraph(),\n//   Images: [{\n//     src: faker.image.image(),\n//   }],\n//   Comments: [{\n//     User: {\n//       id: v4(),\n//       nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.sentence(),\n//   }],\n// }));\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.text,\n//   User: {\n//     id: data.myInfo.id,\n//     nickname: data.myInfo.nickname,\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: v4(),\n//   User: {\n//     id: data.myInfo.id,\n//     nickname: data.myInfo.nickname,\n//   },\n//   content: data.content,\n// });","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/post.js"],"names":["produce","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","DELETE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","LIKE_FAILURE","LIKE_REQUEST","LIKE_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","UNLIKE_FAILURE","UNLIKE_REQUEST","UNLIKE_SUCCESS","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","deletePostLoading","deletePostDone","deletePostError","loadPostsLoading","loadPostsDone","loadPostsError","likeLoading","likeDone","likeError","unlikeLoading","unlikeDone","unlikeError","hasMorePosts","addPostRequestAction","data","type","deletePostRequestAction","addCommentRequestAction","reducer","state","action","draft","unshift","error","console","log","filter","p","id","PostId","post","find","Comments","concat","length","Likers","push","UserId","Error","l"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, DELETE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS,\r\n  LIKE_FAILURE, LIKE_REQUEST, LIKE_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS,\r\n  UNLIKE_FAILURE, UNLIKE_REQUEST, UNLIKE_SUCCESS } from '../actions/post';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  deletePostLoading: false,\r\n  deletePostDone: false,\r\n  deletePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  likeLoading: false,\r\n  likeDone: false,\r\n  likeError: null,\r\n  unlikeLoading: false,\r\n  unlikeDone: false,\r\n  unlikeError: null,\r\n  hasMorePosts: true,\r\n};\r\n\r\nexport const addPostRequestAction = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const deletePostRequestAction = (data) => ({\r\n  type: DELETE_POST_REQUEST,\r\n  data,\r\n});\r\nexport const addCommentRequestAction = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      // immer 사용\r\n      draft.mainPosts.unshift(action.data);\r\n      // immer 사용 X\r\n      // [dummyPost(action.data), ...state.mainPosts];\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case DELETE_POST_REQUEST:\r\n      draft.deletePostLoading = true;\r\n      break;\r\n    case DELETE_POST_SUCCESS:\r\n      draft.deletePostLoading = false;\r\n      draft.deletePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((p) => p.id !== action.data.PostId);\r\n      break;\r\n    case DELETE_POST_FAILURE:\r\n      draft.deletePostLoading = false;\r\n      draft.deletePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      draft.addCommentDone = true;\r\n      draft.addCommentLoading = false;\r\n      const post = draft.mainPosts.find((p) => p.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n    }\r\n      break;\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.loadPostsError = action.error;\r\n      draft.loadPostsLoading = false;\r\n      break;\r\n    case LOAD_POST_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);\r\n      draft.hasMorePosts = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case LIKE_REQUEST:\r\n      draft.likeLoading = true;\r\n      break;\r\n    case LIKE_SUCCESS: {\r\n      draft.likeLoading = false;\r\n      draft.likeDone = true;\r\n      const post = draft.mainPosts.find((p) => p.id === action.data.PostId);\r\n      post.Likers.push({ id: action.data.UserId });\r\n      break;\r\n    }\r\n    case LIKE_FAILURE:\r\n      draft.likeError = action.Error;\r\n      draft.likeLoading = false;\r\n      break;\r\n    case UNLIKE_REQUEST:\r\n      draft.unlikeLoading = true;\r\n      break;\r\n    case UNLIKE_SUCCESS: {\r\n      draft.unlikeLoading = false;\r\n      draft.unlikeDone = true;\r\n      const post = draft.mainPosts.find((p) => p.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((l) => l.id !== action.data.UserId);\r\n      break;\r\n    }\r\n    case UNLIKE_FAILURE:\r\n      draft.unlikeError = action.Error;\r\n      draft.unlikeLoading = false;\r\n      break;\r\n    default: break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n\r\n// export const dummyPostsGenerator = (number) => Array(number).fill().map(() => ({\r\n//   id: v4(),\r\n//   User: {\r\n//     id: v4(),\r\n//     nickname: faker.name.findName(),\r\n//   },\r\n//   content: faker.lorem.paragraph(),\r\n//   Images: [{\r\n//     src: faker.image.image(),\r\n//   }],\r\n//   Comments: [{\r\n//     User: {\r\n//       id: v4(),\r\n//       nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.sentence(),\r\n//   }],\r\n// }));\r\n\r\n// const dummyPost = (data) => ({\r\n//   id: data.id,\r\n//   content: data.text,\r\n//   User: {\r\n//     id: data.myInfo.id,\r\n//     nickname: data.myInfo.nickname,\r\n//   },\r\n//   Images: [],\r\n//   Comments: [],\r\n// });\r\n\r\n// const dummyComment = (data) => ({\r\n//   id: v4(),\r\n//   User: {\r\n//     id: data.myInfo.id,\r\n//     nickname: data.myInfo.nickname,\r\n//   },\r\n//   content: data.content,\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}