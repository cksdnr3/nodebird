{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\ImagesZoom\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Slider from 'react-slick';\nimport { CloseBtn, Global, Header, ImgWrapper, Indecator, Overlay, SliderWrapper } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(SliderWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          arrows: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n          afterChange: function afterChange(slide) {\n            return setCurrentSlide(slide);\n          },\n          children: images.map(function (image) {\n            return /*#__PURE__*/_jsxDEV(ImgWrapper, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.src,\n                alt: image.src\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 17\n              }, _this)\n            }, image.src, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Indecator, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [currentSlide + 1, ' ', \"/\", images.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ImagesZoom, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n\n_c = ImagesZoom;\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesZoom\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/ImagesZoom/index.js"],"names":["PropTypes","useState","Slider","CloseBtn","Global","Header","ImgWrapper","Indecator","Overlay","SliderWrapper","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","image","src","length","propTypes","arrayOf","object","isRequired","func"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,OAA1D,EAAmEC,aAAnE,QAAwF,UAAxF;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC1C,kBAAwCX,QAAQ,CAAC,CAAD,CAAhD;AAAA,MAAOY,YAAP;AAAA,MAAqBC,eAArB;;AACA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAME,QAAC,aAAD;AAAA,6BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAE,KAAhB;AAAuB,UAAA,YAAY,EAAE,CAArC;AAAwC,UAAA,cAAc,EAAE,CAAxD;AAA2D,UAAA,QAAQ,MAAnE;AAAoE,UAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,mBAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,WAAjF;AAAA,oBACGJ,MAAM,CAACK,GAAP,CAAW,UAACC,KAAD;AAAA,gCACV,QAAC,UAAD;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEA,KAAK,CAACC,GAAhB;AAAqB,gBAAA,GAAG,EAAED,KAAK,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF,eAAiBD,KAAK,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,qBADU;AAAA,WAAX;AADH;AAAA;AAAA;AAAA;AAAA,iBADF,eAQE,QAAC,SAAD;AAAA,iCACE;AAAA,uBACGL,YAAY,GAAG,CADlB,EAEG,GAFH,OAIGF,MAAM,CAACQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4BD,CA9BD;;GAAMT,U;;KAAAA,U;AAgCNA,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,MAAM,EAAEX,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC,UADvB;AAErBX,EAAAA,OAAO,EAAEZ,SAAS,CAACwB,IAAV,CAAeD;AAFH,CAAvB;AAKA,eAAeb,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { CloseBtn, Global, Header, ImgWrapper, Indecator, Overlay, SliderWrapper } from './styles';\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Global />\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn onClick={onClose} />\r\n      </Header>\r\n      <SliderWrapper>\r\n        <div>\r\n          <Slider arrows={false} slidesToShow={1} slidesToScroll={1} infinite afterChange={(slide) => setCurrentSlide(slide)}>\r\n            {images.map((image) => (\r\n              <ImgWrapper key={image.src}>\r\n                <img src={image.src} alt={image.src} />\r\n              </ImgWrapper>\r\n            ))}\r\n          </Slider>\r\n          <Indecator>\r\n            <div>\r\n              {currentSlide + 1}\r\n              {' '}\r\n              /\r\n              {images.length}\r\n            </div>\r\n          </Indecator>\r\n        </div>\r\n      </SliderWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n"]},"metadata":{},"sourceType":"module"}