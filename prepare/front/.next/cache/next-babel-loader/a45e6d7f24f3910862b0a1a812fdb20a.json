{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCommentRequestAction } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText, setInput] = useInput('');\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addPostDone) {\n      setInput('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch(addCommentRequestAction({\n      content: commentText,\n      postId: post.id,\n      userId: id\n    }));\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        style: {\n          marginBottom: 5\n        },\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'right'\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/CommentForm.js"],"names":["PropTypes","Button","Form","Input","useCallback","useEffect","useInput","useDispatch","useSelector","addCommentRequestAction","CommentForm","post","commentText","onChangeCommentText","setInput","id","state","user","me","addPostDone","dispatch","onSubmit","console","log","content","postId","userId","marginBottom","float","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAM,CAACC,WAAD,EAAcC,mBAAd,EAAmCC,QAAnC,IAA+CR,QAAQ,CAAC,EAAD,CAA7D;AACA,QAAMS,EAAE,GAAGP,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkBX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAAnC;AACA,QAAMS,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,WAAJ,EAAiB;AACbL,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACK,WAAD,CAJM,CAAT;AAMA,QAAME,QAAQ,GAAGjB,WAAW,CAAC,MAAM;AAC/BkB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACI,EAAjB,EAAqBH,WAArB;AACAQ,IAAAA,QAAQ,CACJX,uBAAuB,CAAC;AACpBe,MAAAA,OAAO,EAAEZ,WADW;AAEpBa,MAAAA,MAAM,EAAEd,IAAI,CAACI,EAFO;AAGpBW,MAAAA,MAAM,EAAEX;AAHY,KAAD,CADnB,CAAR;AAOH,GAT2B,EASzB,CAACH,WAAD,CATyB,CAA5B;AAWA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,QAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAE;AAAEM,UAAAA,YAAY,EAAE;AAAhB,SAAvB;AAA4C,QAAA,WAAW,EAAC,0DAAxD;AAAsE,QAAA,KAAK,EAAEf,WAA7E;AAA0F,QAAA,QAAQ,EAAEC,mBAApG;AAAyH,QAAA,IAAI,EAAE;AAA/H;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SAAf;AAAmC,QAAA,IAAI,EAAC,SAAxC;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAjCD;;AAmCAlB,WAAW,CAACmB,SAAZ,GAAwB;AACpBlB,EAAAA,IAAI,EAAEX,SAAS,CAAC8B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useCallback, useEffect } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCommentRequestAction } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const [commentText, onChangeCommentText, setInput] = useInput('');\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addPostDone } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setInput('');\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        dispatch(\r\n            addCommentRequestAction({\r\n                content: commentText,\r\n                postId: post.id,\r\n                userId: id,\r\n            })\r\n        );\r\n    }, [commentText]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmit}>\r\n            <Form.Item>\r\n                <Input.TextArea style={{ marginBottom: 5 }} placeholder=\"댓글을 입력해주세요.\" value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button style={{ float: 'right' }} type=\"primary\" htmlType=\"submit\">\r\n                    comment\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}