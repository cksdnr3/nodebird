{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from '@redux-saga/core';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas'; // const loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n//   console.log(action);\n//   return next(action);\n// };\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/store/ConfigureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","sagaMiddleware","middlewares","loggerMiddleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AACA,MAAMK,WAAW,GAAG,CAACD,cAAD,EAAiBE,gBAAjB,CAApB;AACA,MAAMC,QAAQ,GAAG,QAAwCV,OAAO,CAACD,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CAA/C,GAAmFN,mBAAmB,CAACH,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CAAvH;AACA,MAAMG,KAAK,GAAGV,WAAW,CAACG,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBL,cAAc,CAACM,GAAf,CAAmBR,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACD,CAPD;;AASA,IAAMG,OAAO,GAAGhB,aAAa,CAACQ,cAAD,EAAiB;AAC5CS,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\n// const loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n//   console.log(action);\r\n//   return next(action);\r\n// };\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}