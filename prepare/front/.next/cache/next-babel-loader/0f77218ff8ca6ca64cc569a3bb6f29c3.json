{"ast":null,"code":"import produce from 'immer';\nimport { ADD_POST_TO_ME, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, DELETE_POST_OF_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\nexport const initialState = {\n  loginLoading: false,\n  loginDone: false,\n  lgoinError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  signupLoading: false,\n  signupDone: false,\n  signupError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  loadMyInfoLoading: false,\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  myInfo: null\n};\nexport const loginRequestAction = data => ({\n  type: LOGIN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOGOUT_REQUEST\n});\nexport const followRequestAction = () => ({\n  type: FOLLOW_REQUEST\n});\nexport const unfollowRequestAction = () => ({\n  type: UNFOLLOW_REQUEST\n});\nexport const signupRequestAction = data => ({\n  type: SIGNUP_REQUEST,\n  data\n}); // const dummyGenerator = (data) => ({\n//   ...data,\n//   nickname: 'cksdnr3',\n//   id: v4(),\n//   Posts: [],\n//   Followings: [],\n//   Followers: [],\n// });\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      draft.loginLoading = true;\n      break;\n\n    case LOGIN_SUCCESS:\n      draft.loginLoading = false;\n      draft.loginDone = true;\n      draft.myInfo = action.data;\n      break;\n\n    case LOGIN_FAILURE:\n      draft.loginLoading = false;\n      draft.loginError = action.error;\n      console.log(action.error);\n      break;\n\n    case LOGOUT_REQUEST:\n      draft.logoutLoading = true;\n      break;\n\n    case LOGOUT_SUCCESS:\n      draft.logoutLoading = false;\n      draft.loginDone = false;\n      draft.myInfo = null;\n      break;\n\n    case LOGOUT_FAILURE:\n      draft.logoutLoading = false;\n      draft.logoutError = action.error;\n      console.log(action.error);\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = false;\n      draft.myInfo.nickname = action.data;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      console.log(action.error);\n      break;\n\n    case SIGNUP_REQUEST:\n      draft.signupLoading = true;\n      break;\n\n    case SIGNUP_SUCCESS:\n      draft.signupLoading = false;\n      draft.signupDone = true;\n      break;\n\n    case SIGNUP_FAILURE:\n      draft.signupLoading = false;\n      draft.signupError = action.error;\n      console.log(action.error);\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.myInfo.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case DELETE_POST_OF_ME:\n      draft.myInfo.Posts = draft.myInfo.Posts.filter(p => p.id !== action.data);\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.myInfo.Followings.push({\n        id: action.data\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      console.log(action.error);\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.myInfo.Followings = draft.myInfo.Followings.filter(f => f.id !== action.data);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      console.log(action.error);\n      break;\n\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.myInfo = action.data;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer; // redux-thunk\n// export const loginAction = (data) => {\n//     return (dispatch, getState) => {\n//         dispatch(loginRequestAction());\n//         axios\n//             .post('api/login')\n//             .then((res) => {\n//                 dispatch(loginSuccessAction(res.data));\n//             })\n//             .catch((err) => {\n//                 dispatch(loginFailureAction(err));\n//             });\n//     };\n// };","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/user.js"],"names":["produce","ADD_POST_TO_ME","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","DELETE_POST_OF_ME","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","initialState","loginLoading","loginDone","lgoinError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","myInfo","loginRequestAction","data","type","logoutRequestAction","followRequestAction","unfollowRequestAction","signupRequestAction","reducer","state","action","draft","loginError","error","console","log","nickname","Posts","unshift","id","filter","p","Followings","push","f"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SACEC,cADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,uBAJF,EAKEC,iBALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,cARF,EASEC,oBATF,EAUEC,oBAVF,EAWEC,oBAXF,EAYEC,aAZF,EAaEC,aAbF,EAcEC,aAdF,EAeEC,cAfF,EAgBEC,cAhBF,EAiBEC,cAjBF,EAkBEC,cAlBF,EAmBEC,cAnBF,EAoBEC,cApBF,EAqBEC,gBArBF,EAsBEC,gBAtBF,EAuBEC,gBAvBF,QAwBO,iBAxBP;AA0BA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,YAAY,EAAE,KADY;AAE1BC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,UAAU,EAAE,IAHc;AAI1BC,EAAAA,aAAa,EAAE,KAJW;AAK1BC,EAAAA,UAAU,EAAE,KALc;AAM1BC,EAAAA,WAAW,EAAE,IANa;AAO1BC,EAAAA,aAAa,EAAE,KAPW;AAQ1BC,EAAAA,UAAU,EAAE,KARc;AAS1BC,EAAAA,WAAW,EAAE,IATa;AAU1BC,EAAAA,qBAAqB,EAAE,KAVG;AAW1BC,EAAAA,kBAAkB,EAAE,KAXM;AAY1BC,EAAAA,mBAAmB,EAAE,IAZK;AAa1BC,EAAAA,aAAa,EAAE,KAbW;AAc1BC,EAAAA,UAAU,EAAE,KAdc;AAe1BC,EAAAA,WAAW,EAAE,IAfa;AAgB1BC,EAAAA,eAAe,EAAE,KAhBS;AAiB1BC,EAAAA,YAAY,EAAE,KAjBY;AAkB1BC,EAAAA,aAAa,EAAE,IAlBW;AAmB1BC,EAAAA,iBAAiB,EAAE,KAnBO;AAoB1BC,EAAAA,cAAc,EAAE,KApBU;AAqB1BC,EAAAA,eAAe,EAAE,IArBS;AAsB1BC,EAAAA,MAAM,EAAE;AAtBkB,CAArB;AAyBP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AAC3CC,EAAAA,IAAI,EAAEpC,aADqC;AAE3CmC,EAAAA;AAF2C,CAAX,CAA3B;AAKP,OAAO,MAAME,mBAAmB,GAAG,OAAO;AACxCD,EAAAA,IAAI,EAAEjC;AADkC,CAAP,CAA5B;AAIP,OAAO,MAAMmC,mBAAmB,GAAG,OAAO;AACxCF,EAAAA,IAAI,EAAE1C;AADkC,CAAP,CAA5B;AAIP,OAAO,MAAM6C,qBAAqB,GAAG,OAAO;AAC1CH,EAAAA,IAAI,EAAE3B;AADoC,CAAP,CAA9B;AAIP,OAAO,MAAM+B,mBAAmB,GAAIL,IAAD,KAAW;AAC5CC,EAAAA,IAAI,EAAE9B,cADsC;AAE5C6B,EAAAA;AAF4C,CAAX,CAA5B,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAG/B,YAAT,EAAuBgC,MAAvB,KAAkCxD,OAAO,CAACuD,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACP,IAAf;AACE,SAAKpC,aAAL;AACE4C,MAAAA,KAAK,CAAChC,YAAN,GAAqB,IAArB;AACA;;AACF,SAAKX,aAAL;AACE2C,MAAAA,KAAK,CAAChC,YAAN,GAAqB,KAArB;AACAgC,MAAAA,KAAK,CAAC/B,SAAN,GAAkB,IAAlB;AACA+B,MAAAA,KAAK,CAACX,MAAN,GAAeU,MAAM,CAACR,IAAtB;AACA;;AACF,SAAKpC,aAAL;AACE6C,MAAAA,KAAK,CAAChC,YAAN,GAAqB,KAArB;AACAgC,MAAAA,KAAK,CAACC,UAAN,GAAmBF,MAAM,CAACG,KAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AACA;;AACF,SAAK3C,cAAL;AACEyC,MAAAA,KAAK,CAAC7B,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAKX,cAAL;AACEwC,MAAAA,KAAK,CAAC7B,aAAN,GAAsB,KAAtB;AACA6B,MAAAA,KAAK,CAAC/B,SAAN,GAAkB,KAAlB;AACA+B,MAAAA,KAAK,CAACX,MAAN,GAAe,IAAf;AACA;;AACF,SAAK/B,cAAL;AACE0C,MAAAA,KAAK,CAAC7B,aAAN,GAAsB,KAAtB;AACA6B,MAAAA,KAAK,CAAC3B,WAAN,GAAoB0B,MAAM,CAACG,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AACA;;AACF,SAAKxD,uBAAL;AACEsD,MAAAA,KAAK,CAACvB,qBAAN,GAA8B,IAA9B;AACA;;AACF,SAAK9B,uBAAL;AACEqD,MAAAA,KAAK,CAACvB,qBAAN,GAA8B,KAA9B;AACAuB,MAAAA,KAAK,CAACtB,kBAAN,GAA2B,KAA3B;AACAsB,MAAAA,KAAK,CAACX,MAAN,CAAagB,QAAb,GAAwBN,MAAM,CAACR,IAA/B;AACA;;AACF,SAAK9C,uBAAL;AACEuD,MAAAA,KAAK,CAACvB,qBAAN,GAA8B,KAA9B;AACAuB,MAAAA,KAAK,CAACrB,mBAAN,GAA4BoB,MAAM,CAACG,KAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AAEA;;AACF,SAAKxC,cAAL;AACEsC,MAAAA,KAAK,CAAC1B,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAKX,cAAL;AACEqC,MAAAA,KAAK,CAAC1B,aAAN,GAAsB,KAAtB;AACA0B,MAAAA,KAAK,CAACzB,UAAN,GAAmB,IAAnB;AACA;;AACF,SAAKd,cAAL;AACEuC,MAAAA,KAAK,CAAC1B,aAAN,GAAsB,KAAtB;AACA0B,MAAAA,KAAK,CAACxB,WAAN,GAAoBuB,MAAM,CAACG,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AAEA;;AACF,SAAK1D,cAAL;AACEwD,MAAAA,KAAK,CAACX,MAAN,CAAaiB,KAAb,CAAmBC,OAAnB,CAA2B;AAAEC,QAAAA,EAAE,EAAET,MAAM,CAACR;AAAb,OAA3B;AACA;;AACF,SAAK3C,iBAAL;AACEoD,MAAAA,KAAK,CAACX,MAAN,CAAaiB,KAAb,GAAqBN,KAAK,CAACX,MAAN,CAAaiB,KAAb,CAAmBG,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,CAACF,EAAF,KAAST,MAAM,CAACR,IAAjD,CAArB;AACA;;AACF,SAAKzC,cAAL;AACEkD,MAAAA,KAAK,CAACpB,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAK7B,cAAL;AACEiD,MAAAA,KAAK,CAACpB,aAAN,GAAsB,KAAtB;AACAoB,MAAAA,KAAK,CAACnB,UAAN,GAAmB,IAAnB;AACAmB,MAAAA,KAAK,CAACX,MAAN,CAAasB,UAAb,CAAwBC,IAAxB,CAA6B;AAAEJ,QAAAA,EAAE,EAAET,MAAM,CAACR;AAAb,OAA7B;AACA;;AACF,SAAK1C,cAAL;AACEmD,MAAAA,KAAK,CAACpB,aAAN,GAAsB,KAAtB;AACAoB,MAAAA,KAAK,CAAClB,WAAN,GAAoBiB,MAAM,CAACG,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AAEA;;AACF,SAAKrC,gBAAL;AACEmC,MAAAA,KAAK,CAACjB,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAKjB,gBAAL;AACEkC,MAAAA,KAAK,CAACjB,eAAN,GAAwB,KAAxB;AACAiB,MAAAA,KAAK,CAAChB,YAAN,GAAqB,IAArB;AACAgB,MAAAA,KAAK,CAACX,MAAN,CAAasB,UAAb,GAA0BX,KAAK,CAACX,MAAN,CAAasB,UAAb,CAAwBF,MAAxB,CAAgCI,CAAD,IAAOA,CAAC,CAACL,EAAF,KAAST,MAAM,CAACR,IAAtD,CAA1B;AACA;;AACF,SAAK3B,gBAAL;AACEoC,MAAAA,KAAK,CAACjB,eAAN,GAAwB,KAAxB;AACAiB,MAAAA,KAAK,CAACf,aAAN,GAAsBc,MAAM,CAACG,KAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AACA;;AACF,SAAKjD,oBAAL;AACE+C,MAAAA,KAAK,CAACd,iBAAN,GAA0B,IAA1B;AACA;;AACF,SAAKhC,oBAAL;AACE8C,MAAAA,KAAK,CAACd,iBAAN,GAA0B,KAA1B;AACAc,MAAAA,KAAK,CAACb,cAAN,GAAuB,IAAvB;AACAa,MAAAA,KAAK,CAACX,MAAN,GAAeU,MAAM,CAACR,IAAtB;AACA;;AACF,SAAKvC,oBAAL;AACEgD,MAAAA,KAAK,CAACd,iBAAN,GAA0B,KAA1B;AACAc,MAAAA,KAAK,CAACZ,eAAN,GAAwBW,MAAM,CAACG,KAA/B;AACA;;AACF;AAAS;AAnGX;AAqGD,CAtGwD,CAAzD;;AAwGA,eAAeL,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import produce from 'immer';\r\nimport {\r\n  ADD_POST_TO_ME,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  DELETE_POST_OF_ME,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../actions/user';\r\n\r\nexport const initialState = {\r\n  loginLoading: false,\r\n  loginDone: false,\r\n  lgoinError: null,\r\n  logoutLoading: false,\r\n  logoutDone: false,\r\n  logoutError: null,\r\n  signupLoading: false,\r\n  signupDone: false,\r\n  signupError: null,\r\n  changeNicknameLoading: false,\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  followLoading: false,\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false,\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoDone: false,\r\n  loadMyInfoError: null,\r\n  myInfo: null,\r\n};\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOGIN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n  type: LOGOUT_REQUEST,\r\n});\r\n\r\nexport const followRequestAction = () => ({\r\n  type: FOLLOW_REQUEST,\r\n});\r\n\r\nexport const unfollowRequestAction = () => ({\r\n  type: UNFOLLOW_REQUEST,\r\n});\r\n\r\nexport const signupRequestAction = (data) => ({\r\n  type: SIGNUP_REQUEST,\r\n  data,\r\n});\r\n\r\n// const dummyGenerator = (data) => ({\r\n//   ...data,\r\n//   nickname: 'cksdnr3',\r\n//   id: v4(),\r\n//   Posts: [],\r\n//   Followings: [],\r\n//   Followers: [],\r\n// });\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      draft.loginLoading = true;\r\n      break;\r\n    case LOGIN_SUCCESS:\r\n      draft.loginLoading = false;\r\n      draft.loginDone = true;\r\n      draft.myInfo = action.data;\r\n      break;\r\n    case LOGIN_FAILURE:\r\n      draft.loginLoading = false;\r\n      draft.loginError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case LOGOUT_REQUEST:\r\n      draft.logoutLoading = true;\r\n      break;\r\n    case LOGOUT_SUCCESS:\r\n      draft.logoutLoading = false;\r\n      draft.loginDone = false;\r\n      draft.myInfo = null;\r\n      break;\r\n    case LOGOUT_FAILURE:\r\n      draft.logoutLoading = false;\r\n      draft.logoutError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      draft.changeNicknameLoading = true;\r\n      break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameDone = false;\r\n      draft.myInfo.nickname = action.data;\r\n      break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case SIGNUP_REQUEST:\r\n      draft.signupLoading = true;\r\n      break;\r\n    case SIGNUP_SUCCESS:\r\n      draft.signupLoading = false;\r\n      draft.signupDone = true;\r\n      break;\r\n    case SIGNUP_FAILURE:\r\n      draft.signupLoading = false;\r\n      draft.signupError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case ADD_POST_TO_ME:\r\n      draft.myInfo.Posts.unshift({ id: action.data });\r\n      break;\r\n    case DELETE_POST_OF_ME:\r\n      draft.myInfo.Posts = draft.myInfo.Posts.filter((p) => p.id !== action.data);\r\n      break;\r\n    case FOLLOW_REQUEST:\r\n      draft.followLoading = true;\r\n      break;\r\n    case FOLLOW_SUCCESS:\r\n      draft.followLoading = false;\r\n      draft.followDone = true;\r\n      draft.myInfo.Followings.push({ id: action.data });\r\n      break;\r\n    case FOLLOW_FAILURE:\r\n      draft.followLoading = false;\r\n      draft.followError = action.error;\r\n      console.log(action.error);\r\n\r\n      break;\r\n    case UNFOLLOW_REQUEST:\r\n      draft.unfollowLoading = true;\r\n      break;\r\n    case UNFOLLOW_SUCCESS:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowDone = true;\r\n      draft.myInfo.Followings = draft.myInfo.Followings.filter((f) => f.id !== action.data);\r\n      break;\r\n    case UNFOLLOW_FAILURE:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowError = action.error;\r\n      console.log(action.error);\r\n      break;\r\n    case LOAD_MY_INFO_REQUEST:\r\n      draft.loadMyInfoLoading = true;\r\n      break;\r\n    case LOAD_MY_INFO_SUCCESS:\r\n      draft.loadMyInfoLoading = false;\r\n      draft.loadMyInfoDone = true;\r\n      draft.myInfo = action.data;\r\n      break;\r\n    case LOAD_MY_INFO_FAILURE:\r\n      draft.loadMyInfoLoading = false;\r\n      draft.loadMyInfoError = action.error;\r\n      break;\r\n    default: break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n\r\n// redux-thunk\r\n// export const loginAction = (data) => {\r\n//     return (dispatch, getState) => {\r\n//         dispatch(loginRequestAction());\r\n//         axios\r\n//             .post('api/login')\r\n//             .then((res) => {\r\n//                 dispatch(loginSuccessAction(res.data));\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch(loginFailureAction(err));\r\n//             });\r\n//     };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}