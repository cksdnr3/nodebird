{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport FollowBtn from './FollowBtn';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { deletePostRequestAction } from '../reducers/post';\nimport { LIKE_REQUEST, UNLIKE_REQUEST } from '../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$myInfo;\n\n    return (_state$user$myInfo = state.user.myInfo) === null || _state$user$myInfo === void 0 ? void 0 : _state$user$myInfo.id;\n  });\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      deletePostLoading = _useSelector.deletePostLoading;\n\n  var dispatch = useDispatch();\n  var liked = post.Likers.find(function (l) {\n    return l.id === id;\n  });\n  var onLike = useCallback(function () {\n    if (!id) {\n      console.log('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: LIKE_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      console.log('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: UNLIKE_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    if (!id) {\n      console.log('로그인이 필요합니다.');\n    }\n\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var clickDeleteBtn = useCallback(function () {\n    if (!id) {\n      console.log('로그인이 필요합니다.');\n    }\n\n    dispatch(deletePostRequestAction(post.id));\n  }, [post.id]);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      console.log('로그인이 필요합니다.');\n    }\n\n    dispatch({\n      type: RETWEET_REQUEST\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              loading: deletePostLoading,\n              onClick: clickDeleteBtn,\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this)],\n      extra: id && id !== post.User.id && /*#__PURE__*/_jsxDEV(FollowBtn, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        renderItem: function renderItem(item) {\n          return post.Comments.length ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              content: item.content,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, _this),\n              author: item.User.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        },\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        dataSource: post.Comments,\n        itemLayout: \"horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"lIlXmNaRSzsTBW80fhflvQjmDY4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.shape({\n      nickname: PropTypes.string,\n      id: PropTypes.number\n    }),\n    content: PropTypes.string,\n    createdAt: PropTypes.string.isRequired,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useEffect","useState","Card","Button","Avatar","Popover","List","Comment","HeartOutlined","MessageOutlined","RetweetOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","FollowBtn","CommentForm","PostCardContent","deletePostRequestAction","LIKE_REQUEST","UNLIKE_REQUEST","PostCard","post","id","state","user","myInfo","commentFormOpened","setCommentFormOpened","deletePostLoading","dispatch","liked","Likers","find","l","onLike","console","log","type","data","onUnlike","onToggleComment","prev","clickDeleteBtn","onRetweet","RETWEET_REQUEST","marginBottom","Images","User","nickname","content","item","Comments","length","propTypes","shape","number","string","createdAt","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\nimport FollowBtn from './FollowBtn';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { deletePostRequestAction } from '../reducers/post';\r\nimport { LIKE_REQUEST, UNLIKE_REQUEST } from '../actions/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.myInfo?.id);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const { deletePostLoading } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const liked = post.Likers.find((l) => l.id === id);\r\n  const onLike = useCallback(() => {\r\n    if (!id) {\r\n      console.log('로그인이 필요합니다.');\r\n    }\r\n    dispatch({\r\n      type: LIKE_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onUnlike = useCallback(() => {\r\n    if (!id) {\r\n      console.log('로그인이 필요합니다.');\r\n    }\r\n    dispatch({\r\n      type: UNLIKE_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    if (!id) {\r\n      console.log('로그인이 필요합니다.');\r\n    }\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const clickDeleteBtn = useCallback(() => {\r\n    if (!id) {\r\n      console.log('로그인이 필요합니다.');\r\n    }\r\n    dispatch(deletePostRequestAction(post.id));\r\n  }, [post.id]);\r\n\r\n  const onRetweet = useCallback(() => {\r\n    if (!id) {\r\n      console.log('로그인이 필요합니다.');\r\n    }\r\n    dispatch({\r\n      type: RETWEET_REQUEST,\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 10 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onUnlike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined\r\n              key=\"heart\"\r\n              onClick={onLike}\r\n            />\r\n          ),\r\n          <MessageOutlined\r\n            key=\"comment\"\r\n            onClick={onToggleComment}\r\n          />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button loading={deletePostLoading} onClick={clickDeleteBtn} type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Button>신고</Button>\r\n                  </>\r\n                )}\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && id !== post.User.id && <FollowBtn post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            renderItem={(item) => (post.Comments.length\r\n              ? (\r\n                <li>\r\n                  <Comment\r\n                    content={item.content}\r\n                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                    author={item.User.nickname}\r\n                  />\r\n                </li>\r\n              )\r\n              : <></>)}\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            dataSource={post.Comments}\r\n            itemLayout=\"horizontal\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.shape({\r\n      nickname: PropTypes.string,\r\n      id: PropTypes.number,\r\n    }),\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string.isRequired,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}