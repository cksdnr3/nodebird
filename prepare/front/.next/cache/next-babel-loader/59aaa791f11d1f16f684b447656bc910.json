{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nexport const initialState = {\n  isLoggedin: false,\n  myInfo: null,\n  signupData: {},\n  loginData: {}\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOGIN',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOGIN',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOGIN',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport const logoutFailureAction = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedin: true,\n        myInfo: action.data\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedin: false,\n        myInfo: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/user.js"],"names":["HYDRATE","initialState","isLoggedin","myInfo","signupData","loginData","loginRequestAction","data","type","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","reducer","state","action"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,MAAM,EAAE,IAFgB;AAGxBC,EAAAA,UAAU,EAAE,EAHY;AAIxBC,EAAAA,SAAS,EAAE;AAJa,CAArB;AAOP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,OADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAIF,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,OADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,kBAAkB,GAAIH,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,OADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHJ,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMK,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHL,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAMP,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACR,IAAf;AACI,SAAK,OAAL;AACI,6CACOO,KADP;AAEIb,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,MAAM,EAAEa,MAAM,CAACT;AAHnB;;AAKJ,SAAK,QAAL;AACI,6CACOQ,KADP;AAEIb,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,MAAM,EAAE;AAHZ;;AAKJ;AACI,aAAOY,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nexport const initialState = {\r\n    isLoggedin: false,\r\n    myInfo: null,\r\n    signupData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        data,\r\n    };\r\n};\r\nexport const loginSuccessAction = (data) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        data,\r\n    };\r\n};\r\nexport const loginFailureAction = (data) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        data,\r\n    };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: 'LOGOUT',\r\n    };\r\n};\r\nexport const logoutSuccessAction = () => {\r\n    return {\r\n        type: 'LOGOUT',\r\n    };\r\n};\r\nexport const logoutFailureAction = () => {\r\n    return {\r\n        type: 'LOGOUT',\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                isLoggedin: true,\r\n                myInfo: action.data,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedin: false,\r\n                myInfo: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}