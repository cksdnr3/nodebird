{"ast":null,"code":"import { all, call, fork } from '@redux-saga/core/effects';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_REQUEST, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\n\nconst loginAPI = data => axios.post('user/login', data);\n\nfunction* login(action) {\n  try {\n    const response = yield call(loginAPI, action.data);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function logoutAPI() {\n//   return axios.post('api/logout');\n// }\n\n\nfunction* logout() {\n  // const result = yield call(logoutAPI);\n  try {\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadMyInfoAPI = () => axios.get('/user');\n\nfunction* loadMyInfo() {\n  try {\n    const response = yield call(loadMyInfoAPI);\n    yield put({});\n  } catch (err) {}\n}\n\nfunction* watchLogin() {\n  // while (true) {\n  //     yield take('LOG_IN_REQUEST', login);\n  // }\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  // while (true) {\n  //     yield take('LOG_OUT_REQUEST', logout);\n  // }\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo)]);\n}","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_REQUEST","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loginAPI","data","post","login","action","response","type","err","error","logout","signupAPI","signup","follow","unfollow","loadMyInfoAPI","get","loadMyInfo","watchLogin","watchLogout","watchFollow","watchUnfollow","watchSignup","watchLoadMyInfo","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,0BAAhC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,oBAAzD,EAA+EC,aAA/E,EAA8FC,aAA9F,EACEC,aADF,EACiBC,cADjB,EACiCC,cADjC,EACiDC,cADjD,EACiEC,cADjE,EACiFC,cADjF,EAEEC,cAFF,EAEkBC,gBAFlB,EAEoCC,gBAFpC,EAEsDC,gBAFtD,QAE8E,iBAF9E;;AAIA,MAAMC,QAAQ,GAAIC,IAAD,IAAUlB,KAAK,CAACmB,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAA3B;;AAEA,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM1B,IAAI,CAACqB,QAAD,EAAWI,MAAM,CAACH,IAAlB,CAA3B;AACA,UAAMpB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEhB,aADE;AAERW,MAAAA,IAAI,EAAEI,QAAQ,CAACJ;AAFP,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAElB,aADE;AAERoB,MAAAA,KAAK,EAAED,GAAG,CAACF,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUQ,MAAV,GAAmB;AACjB;AACA,MAAI;AACF,UAAM5B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAT;AAGD,GAJD,CAIE,OAAOc,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEf,cADE;AAERiB,MAAAA,KAAK,EAAED,GAAG,CAACF,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASS,SAAT,CAAmBT,IAAnB,EAAyB;AACvB,SAAOlB,KAAK,CAACmB,IAAN,CAAW,OAAX,EAAoBD,IAApB,CAAP;AACD;;AAED,UAAUU,MAAV,CAAiBP,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMzB,IAAI,CAAC+B,SAAD,EAAYN,MAAM,CAACH,IAAnB,CAAV;AACA,UAAMpB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOW,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEZ,cADE;AAERc,MAAAA,KAAK,EAAED,GAAG,CAACF,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,MAAV,CAAiBR,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMvB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEpB,cADE;AAERe,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GALD,CAKE,OAAOM,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEtB,cADE;AAERwB,MAAAA,KAAK,EAAED,GAAG,CAACF,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AACD,UAAUY,QAAV,CAAmBT,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMvB,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEP,gBADE;AAERE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GALD,CAKE,OAAOM,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAET,gBADE;AAERW,MAAAA,KAAK,EAAED,GAAG,CAACF,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,MAAMa,aAAa,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU,OAAV,CAA5B;;AAEA,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMX,QAAQ,GAAG,MAAM1B,IAAI,CAACmC,aAAD,CAA3B;AACA,UAAMjC,GAAG,CAAC,EAAD,CAAT;AACD,GAHD,CAGE,OAAO0B,GAAP,EAAY,CAEb;AACF;;AAED,UAAUU,UAAV,GAAuB;AACrB;AACA;AACA;AACA,QAAMnC,UAAU,CAACO,aAAD,EAAgBc,KAAhB,CAAhB;AACD;;AAED,UAAUe,WAAV,GAAwB;AACtB;AACA;AACA;AAEA,QAAMpC,UAAU,CAACU,cAAD,EAAiBiB,MAAjB,CAAhB;AACD;;AAED,UAAUU,WAAV,GAAwB;AACtB,QAAMrC,UAAU,CAACG,cAAD,EAAiB2B,MAAjB,CAAhB;AACD;;AAED,UAAUQ,aAAV,GAA0B;AACxB,QAAMtC,UAAU,CAACgB,gBAAD,EAAmBe,QAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMvC,UAAU,CAACa,cAAD,EAAiBgB,MAAjB,CAAhB;AACD;;AAED,UAAUW,eAAV,GAA4B;AAC1B,QAAMxC,UAAU,CAACK,oBAAD,EAAuB6B,UAAvB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAM7C,GAAG,CAAC,CAACE,IAAI,CAACqC,UAAD,CAAL,EAAmBrC,IAAI,CAACsC,WAAD,CAAvB,EACRtC,IAAI,CAACyC,WAAD,CADI,EACWzC,IAAI,CAACuC,WAAD,CADf,EAC8BvC,IAAI,CAACwC,aAAD,CADlC,EACmDxC,IAAI,CAAC0C,eAAD,CADvD,CAAD,CAAT;AAED","sourcesContent":["import { all, call, fork } from '@redux-saga/core/effects';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_REQUEST, LOGIN_FAILURE, LOGIN_REQUEST,\r\n  LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../actions/user';\r\n\r\nconst loginAPI = (data) => axios.post('user/login', data);\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const response = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: response.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function logoutAPI() {\r\n//   return axios.post('api/logout');\r\n// }\r\n\r\nfunction* logout() {\r\n  // const result = yield call(logoutAPI);\r\n  try {\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGNUP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unfollow(action) {\r\n  try {\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst loadMyInfoAPI = () => axios.get('/user');\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const response = yield call(loadMyInfoAPI);\r\n    yield put({});\r\n  } catch (err) {\r\n\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // while (true) {\r\n  //     yield take('LOG_IN_REQUEST', login);\r\n  // }\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  // while (true) {\r\n  //     yield take('LOG_OUT_REQUEST', logout);\r\n  // }\r\n\r\n  yield takeLatest(LOGOUT_REQUEST, logout);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGNUP_REQUEST, signup);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout),\r\n    fork(watchSignup), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}