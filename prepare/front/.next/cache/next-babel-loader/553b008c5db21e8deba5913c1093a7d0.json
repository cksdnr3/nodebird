{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FOLLOW_REQUEST, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, UNFOLLOW_REQUEST } from '../actions/user';\nexport const initialState = {\n  isLoggedin: false,\n  isLoggingin: false,\n  isLoggingout: false,\n  isSigningup: false,\n  myInfo: null,\n  signupData: {},\n  loginData: {}\n}; // redux-thunk\n// export const loginAction = (data) => {\n//     return (dispatch, getState) => {\n//         dispatch(loginRequestAction());\n//         axios\n//             .post('api/login')\n//             .then((res) => {\n//                 dispatch(loginSuccessAction(res.data));\n//             })\n//             .catch((err) => {\n//                 dispatch(loginFailureAction(err));\n//             });\n//     };\n// };\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOGIN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\nexport const followRequestAction = () => {\n  return {\n    type: FOLLOW_REQUEST\n  };\n};\nexport const unfollowRequestAction = () => {\n  return {\n    type: UNFOLLOW_REQUEST\n  };\n};\nexport const signupRequestAction = data => {\n  return {\n    type: SIGNUP_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: true\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: false,\n        isLoggedin: true,\n        myInfo: action.data\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: false\n      });\n\n    case LOGOUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: true\n      });\n\n    case LOGOUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: false,\n        isLoggedin: false,\n        myInfo: null\n      });\n\n    case LOGOUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: false\n      });\n\n    case SIGNUP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSigningup: true\n      });\n\n    case SIGNUP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSigningup: false\n      });\n\n    case SIGNUP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSigningup: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/user.js"],"names":["FOLLOW_REQUEST","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","UNFOLLOW_REQUEST","initialState","isLoggedin","isLoggingin","isLoggingout","isSigningup","myInfo","signupData","loginData","loginRequestAction","data","type","logoutRequestAction","followRequestAction","unfollowRequestAction","signupRequestAction","reducer","state","action"],"mappings":";;;;;;AAAA,SACIA,cADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,cAPJ,EAQIC,cARJ,EASIC,cATJ,EAUIC,cAVJ,EAWIC,gBAXJ,QAYO,iBAZP;AAcA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,WAAW,EAAE,KAFW;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAIxBC,EAAAA,WAAW,EAAE,KAJW;AAKxBC,EAAAA,MAAM,EAAE,IALgB;AAMxBC,EAAAA,UAAU,EAAE,EANY;AAOxBC,EAAAA,SAAS,EAAE;AAPa,CAArB,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEnB,aADH;AAEHkB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAEhB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMkB,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHF,IAAAA,IAAI,EAAErB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMwB,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMe,mBAAmB,GAAIL,IAAD,IAAU;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEb,cADH;AAEHY,IAAAA;AAFG,GAAP;AAIH,CALM;;AAOP,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACP,IAAf;AACI,SAAKnB,aAAL;AACI,6CACOyB,KADP;AAEId,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKV,aAAL;AACI,6CACOwB,KADP;AAEId,QAAAA,WAAW,EAAE,KAFjB;AAGID,QAAAA,UAAU,EAAE,IAHhB;AAIII,QAAAA,MAAM,EAAEY,MAAM,CAACR;AAJnB;;AAMJ,SAAKnB,aAAL;AACI,6CACO0B,KADP;AAEId,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKR,cAAL;AACI,6CACOsB,KADP;AAEIb,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAKR,cAAL;AACI,6CACOqB,KADP;AAEIb,QAAAA,YAAY,EAAE,KAFlB;AAGIF,QAAAA,UAAU,EAAE,KAHhB;AAIII,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKZ,cAAL;AACI,6CACOuB,KADP;AAEIb,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAKN,cAAL;AACI,6CACOmB,KADP;AAEIZ,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKN,cAAL;AACI,6CACOkB,KADP;AAEIZ,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKR,cAAL;AACI,6CACOoB,KADP;AAEIZ,QAAAA,WAAW,EAAE;AAFjB;;AAIJ;AACI,aAAOY,KAAP;AAnDR;AAqDH,CAtDD;;AAwDA,eAAeD,OAAf","sourcesContent":["import {\r\n    FOLLOW_REQUEST,\r\n    LOGIN_FAILURE,\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAILURE,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_FAILURE,\r\n    SIGNUP_REQUEST,\r\n    SIGNUP_SUCCESS,\r\n    UNFOLLOW_REQUEST,\r\n} from '../actions/user';\r\n\r\nexport const initialState = {\r\n    isLoggedin: false,\r\n    isLoggingin: false,\r\n    isLoggingout: false,\r\n    isSigningup: false,\r\n    myInfo: null,\r\n    signupData: {},\r\n    loginData: {},\r\n};\r\n\r\n// redux-thunk\r\n// export const loginAction = (data) => {\r\n//     return (dispatch, getState) => {\r\n//         dispatch(loginRequestAction());\r\n//         axios\r\n//             .post('api/login')\r\n//             .then((res) => {\r\n//                 dispatch(loginSuccessAction(res.data));\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch(loginFailureAction(err));\r\n//             });\r\n//     };\r\n// };\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOGIN_REQUEST,\r\n        data,\r\n    };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: LOGOUT_REQUEST,\r\n    };\r\n};\r\n\r\nexport const followRequestAction = () => {\r\n    return {\r\n        type: FOLLOW_REQUEST,\r\n    };\r\n};\r\n\r\nexport const unfollowRequestAction = () => {\r\n    return {\r\n        type: UNFOLLOW_REQUEST,\r\n    };\r\n};\r\n\r\nexport const signupRequestAction = (data) => {\r\n    return {\r\n        type: SIGNUP_REQUEST,\r\n        data,\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingin: true,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingin: false,\r\n                isLoggedin: true,\r\n                myInfo: action.data,\r\n            };\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingin: false,\r\n            };\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingout: true,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingout: false,\r\n                isLoggedin: false,\r\n                myInfo: null,\r\n            };\r\n        case LOGOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingout: false,\r\n            };\r\n        case SIGNUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                isSigningup: true,\r\n            };\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSigningup: false,\r\n            };\r\n        case SIGNUP_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSigningup: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}