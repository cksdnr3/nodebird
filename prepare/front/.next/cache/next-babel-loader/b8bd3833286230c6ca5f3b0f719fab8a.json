{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedin: false,\n  isLoggingin: false,\n  isLoggingout: false,\n  myInfo: null,\n  signupData: {},\n  loginData: {}\n}; // redux-thunk\n// export const loginAction = (data) => {\n//     return (dispatch, getState) => {\n//         dispatch(loginRequestAction());\n//         axios\n//             .post('api/login')\n//             .then((res) => {\n//                 dispatch(loginSuccessAction(res.data));\n//             })\n//             .catch((err) => {\n//                 dispatch(loginFailureAction(err));\n//             });\n//     };\n// };\n\nexport var LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport var LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport var LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport var LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport var LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  console.log('LOGIN_REQ');\n  return {\n    type: 'LOGIN_REQUEST',\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: 'LOGOUT_REQUEST'\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN_REQUEST':\n      console.log('LOGIN_REQ in reducer');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: true\n      });\n\n    case 'LOGIN_SUCCESS':\n      console.log('LOGIN_SUCCESS in reducer');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: false,\n        isLoggedin: true,\n        myInfo: action.data\n      });\n\n    case 'LOGIN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingin: false\n      });\n\n    case 'LOGOUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: true\n      });\n\n    case 'LOGOUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: false,\n        isLoggedin: false,\n        myInfo: null\n      });\n\n    case 'LOGOUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingout: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggedin","isLoggingin","isLoggingout","myInfo","signupData","loginData","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","loginRequestAction","data","console","log","type","logoutRequestAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,WAAW,EAAE,KAFW;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAIxBC,EAAAA,MAAM,EAAE,IAJgB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAO;AACHC,IAAAA,IAAI,EAAE,eADH;AAEHH,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CANM;AAQP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAMP,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBpB,YAAyB;AAAA,MAAXqB,MAAW;;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,eAAL;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,6CACOI,KADP;AAEIlB,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,eAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEA,6CACOI,KADP;AAEIlB,QAAAA,WAAW,EAAE,KAFjB;AAGID,QAAAA,UAAU,EAAE,IAHhB;AAIIG,QAAAA,MAAM,EAAEiB,MAAM,CAACP;AAJnB;;AAMJ,SAAK,eAAL;AACI,6CACOM,KADP;AAEIlB,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,gBAAL;AACI,6CACOkB,KADP;AAEIjB,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAK,gBAAL;AACI,6CACOiB,KADP;AAEIjB,QAAAA,YAAY,EAAE,KAFlB;AAGIF,QAAAA,UAAU,EAAE,KAHhB;AAIIG,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAK,gBAAL;AACI,6CACOgB,KADP;AAEIjB,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACI,aAAOiB,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedin: false,\r\n    isLoggingin: false,\r\n    isLoggingout: false,\r\n    myInfo: null,\r\n    signupData: {},\r\n    loginData: {},\r\n};\r\n\r\n// redux-thunk\r\n// export const loginAction = (data) => {\r\n//     return (dispatch, getState) => {\r\n//         dispatch(loginRequestAction());\r\n//         axios\r\n//             .post('api/login')\r\n//             .then((res) => {\r\n//                 dispatch(loginSuccessAction(res.data));\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch(loginFailureAction(err));\r\n//             });\r\n//     };\r\n// };\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const loginRequestAction = (data) => {\r\n    console.log('LOGIN_REQ');\r\n    return {\r\n        type: 'LOGIN_REQUEST',\r\n        data,\r\n    };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: 'LOGOUT_REQUEST',\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_REQUEST':\r\n            console.log('LOGIN_REQ in reducer');\r\n            return {\r\n                ...state,\r\n                isLoggingin: true,\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('LOGIN_SUCCESS in reducer');\r\n\r\n            return {\r\n                ...state,\r\n                isLoggingin: false,\r\n                isLoggedin: true,\r\n                myInfo: action.data,\r\n            };\r\n        case 'LOGIN_FAILURE':\r\n            return {\r\n                ...state,\r\n                isLoggingin: false,\r\n            };\r\n        case 'LOGOUT_REQUEST':\r\n            return {\r\n                ...state,\r\n                isLoggingout: true,\r\n            };\r\n        case 'LOGOUT_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isLoggingout: false,\r\n                isLoggedin: false,\r\n                myInfo: null,\r\n            };\r\n        case 'LOGOUT_FAILURE':\r\n            return {\r\n                ...state,\r\n                isLoggingout: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}