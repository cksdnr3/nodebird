{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksdn\\\\dev\\\\project\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../actions/post';\nimport { LOAD_MY_INFO_REQUEST } from '../actions/user';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport wrapper from '../store/ConfigureStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const {\n    myInfo\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [myInfo && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  }); // 사가 연동 설정: 사가가 연동을 하지 않으면 비동기 요청을 처리할 수 없다.\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/cksdn/dev/project/nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","END","axios","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","AppLayout","PostCard","PostForm","wrapper","Home","myInfo","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","data","addEventListener","removeEventListener","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { LOAD_POST_REQUEST } from '../actions/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../actions/user';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport wrapper from '../store/ConfigureStore';\r\n\r\nconst Home = () => {\r\n  const { myInfo } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY\r\n         + document.documentElement.clientHeight\r\n         > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data: lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {myInfo && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  // 사가 연동 설정: 사가가 연동을 하지 않으면 비동기 요청을 처리할 수 없다.\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}